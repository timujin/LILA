[gd_scene load_steps=7 format=2]

[ext_resource path="res://Locations/00001PentagramRoom/Graphics/door.png" type="Texture" id=1]
[ext_resource path="res://Objects/cross.png" type="Texture" id=2]
[ext_resource path="res://Objects/BaseActivator.gd" type="Script" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready():
	visible = false
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass
"

[sub_resource type="GDScript" id=2]
script/source = "extends Area2D

onready var interaction_point = get_parent().get_node(\"InteractionPoint\")
onready var activator = get_parent().get_node(\"Activator\")
onready var cursor_manager = get_node(\"/root/MouseCursorManager\")
onready var floatie = get_node(\"/root/Floatie\")

export var ActivatorName : String = \"Unnamed\"
export(String, \"From interaction point\", \"Remote\", \"Background\") var activation_type

func _input_event(viewport, event, shape_idx):
	if not event is InputEventMouseButton:
		return
	if event.button_index != BUTTON_LEFT or not event.pressed:
		return
	if cursor_manager.is_mouse_active == false:
		return
	print(\"Clicked %s\" % ActivatorName) 
	#yield(get_tree(), \"idle_frame\")
	if activator == null:
		printerr(\"No activator set for %s\" % ActivatorName)
		return
	
	var player = get_tree().get_nodes_in_group(\"player\")
	if player.size() == 0:
		# player not active
		return
	else:
		player = player[0]
		
	var movement_node = player.get_node(\"Movement\")
	
	match activation_type:
		\"From interaction point\":
			if interaction_point == null:
				printerr(\"No interaction point for %s\" % ActivatorName)
				return
			movement_node.stop_movement()
			if interaction_point.global_position.distance_to(player.position) < 0.01:
				activator.activate()
			else:
				movement_node.initialize_movement(interaction_point.global_position)
				movement_node.activation_intent = activator
		\"Remote\":
			movement_node.stop_movement()
			activator.activate()
		\"Background\":
			activator.activate()
		_:
			printerr (\"Incorrect activation type for %s: %s\" % [ActivatorName, activation_type])

func _on_ClickArea_mouse_entered():
	if get_node(\"/root/DialogueWindow\").is_up():
		return
	if cursor_manager.is_mouse_active:
		cursor_manager.hand_cursor()
		floatie.display(ActivatorName)


func _on_ClickArea_mouse_exited():
	if get_node(\"/root/DialogueWindow\").is_up():
		return
	cursor_manager.base_cursor()
	floatie.stop_displaying()
"

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 30, 60 )

[node name="BaseObject" type="Node2D"]

[node name="Sprite" type="Sprite" parent="."]
scale = Vector2( 0.458824, 0.473206 )
texture = ExtResource( 1 )

[node name="InteractionPoint" type="Node2D" parent="."]
editor/display_folded = true
position = Vector2( 110, 0 )
script = SubResource( 1 )

[node name="Sprite" type="Sprite" parent="InteractionPoint"]
rotation = 7.61662
texture = ExtResource( 2 )

[node name="ClickArea" type="Area2D" parent="."]
script = SubResource( 2 )
activation_type = "Remote"

[node name="CollisionShape2D" type="CollisionShape2D" parent="ClickArea"]
shape = SubResource( 3 )

[node name="Activator" type="Node" parent="."]
script = ExtResource( 3 )
[connection signal="mouse_entered" from="ClickArea" to="ClickArea" method="_on_ClickArea_mouse_entered"]
[connection signal="mouse_exited" from="ClickArea" to="ClickArea" method="_on_ClickArea_mouse_exited"]
