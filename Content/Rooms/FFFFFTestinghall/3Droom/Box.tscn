[gd_scene load_steps=16 format=2]

[ext_resource path="res://Systems/Rooms/3DRoom.tscn" type="PackedScene" id=1]
[ext_resource path="res://Content/Rooms/FFFFFTestinghall/3Droom/cube_room.dae" type="PackedScene" id=2]
[ext_resource path="res://Systems/Interactables/BaseInteractable3D.tscn" type="PackedScene" id=3]
[ext_resource path="res://Content/Rooms/FFFFFTestinghall/3Droom/FloorMaterial/WoodFloor.tres" type="Material" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

func on_activate():
	$\"../BlurbPoint\".blurb(\"I am a cube!\", null, null)
"

[sub_resource type="BoxShape" id=2]
extents = Vector3( 1, 1, 0.994074 )

[sub_resource type="CubeMesh" id=3]

[sub_resource type="SpatialMaterial" id=4]
flags_unshaded = true
params_cull_mode = 1
params_grow = true
params_grow_amount = 0.02
albedo_color = Color( 0, 0, 0, 1 )

[sub_resource type="Shader" id=5]
code = "//By David Lipps aka DaveTheDev @ EXPWorlds
//v2.0.0 for Godot 3.2

shader_type spatial;
render_mode ambient_light_disabled;

uniform bool use_shade = true;
uniform bool use_specular = false;
uniform bool use_rim = false;
uniform bool use_light = false;
uniform bool use_shadow = false;

uniform vec4 base_color : hint_color = vec4(1.0);
uniform vec4 shade_color : hint_color = vec4(1.0);
uniform vec4 specular_tint : hint_color = vec4(0.75);
uniform vec4 rim_tint : hint_color = vec4(0.75);

uniform float shade_threshold : hint_range(-1.0, 1.0, 0.001) = 0.0;
uniform float shade_softness : hint_range(0.0, 1.0, 0.001) = 0.01;

uniform float specular_glossiness : hint_range(1.0, 100.0, 0.1) = 15.0;
uniform float specular_threshold : hint_range(0.01, 1.0, 0.001) = 0.5;
uniform float specular_softness : hint_range(0.0, 1.0, 0.001) = 0.1;

uniform float rim_threshold : hint_range(0.00, 1.0, 0.001) = 0.25;
uniform float rim_softness : hint_range(0.0, 1.0, 0.001) = 0.05;
uniform float rim_spread : hint_range(0.0, 1.0, 0.001) = 0.5;

uniform float shadow_threshold : hint_range(0.00, 1.0, 0.001) = 0.7;
uniform float shadow_softness : hint_range(0.0, 1.0, 0.001) = 0.1;

uniform sampler2D base_texture: hint_albedo;
uniform sampler2D shade_texture: hint_albedo;

void light()
{
	float NdotL = dot(NORMAL, LIGHT);
	float is_lit = step(shade_threshold, NdotL);
	vec4 base = texture(base_texture, UV).rgba * base_color.rgba;
	vec4 shade = texture(shade_texture, UV).rgba * shade_color.rgba;
	vec4 diffuse = base;
	

	if (use_shade)
	{
		float shade_value = smoothstep(shade_threshold - shade_softness ,shade_threshold + shade_softness, NdotL);
		diffuse = mix(shade, base, shade_value);
		
		if (use_shadow)
		{
			float shadow_value = smoothstep(shadow_threshold - shadow_softness ,shadow_threshold + shadow_softness, ATTENUATION.r);
			shade_value = min(shade_value, shadow_value);
			diffuse = mix(shade, base, shade_value);
			is_lit = step(shadow_threshold, shade_value);
		}
	}
	
	if (use_specular)
	{
		vec3 half = normalize(VIEW + LIGHT);
		float NdotH = dot(NORMAL, half);
		
		float specular_value = pow(NdotH * is_lit, specular_glossiness * specular_glossiness);
		specular_value = smoothstep(specular_threshold - specular_softness, specular_threshold + specular_softness, specular_value);
		diffuse += specular_tint.rgba * specular_value;
	}
	
	if (use_rim)
	{
		float iVdotN = 1.0 - dot(VIEW, NORMAL);
		float inverted_rim_threshold = 1.0 - rim_threshold;
		float inverted_rim_spread = 1.0 - rim_spread;
		
		float rim_value = iVdotN * pow(NdotL, inverted_rim_spread);
		rim_value = smoothstep(inverted_rim_threshold - rim_softness, inverted_rim_threshold + rim_softness, rim_value);
		diffuse += rim_tint.rgba * rim_value * is_lit;
	}
	
	if (use_light)
	{
		diffuse *= vec4(LIGHT_COLOR, 1.0);
	}
	
	DIFFUSE_LIGHT = diffuse.rgb;
	ALPHA = diffuse.a;
}
"

[sub_resource type="ShaderMaterial" id=6]
next_pass = SubResource( 4 )
shader = SubResource( 5 )
shader_param/use_shade = true
shader_param/use_specular = false
shader_param/use_rim = false
shader_param/use_light = false
shader_param/use_shadow = false
shader_param/base_color = Color( 1, 1, 1, 1 )
shader_param/shade_color = Color( 1, 1, 1, 1 )
shader_param/specular_tint = Color( 0.75, 0.75, 0.75, 0.75 )
shader_param/rim_tint = Color( 0.75, 0.75, 0.75, 0.75 )
shader_param/shade_threshold = 0.0
shader_param/shade_softness = 0.01
shader_param/specular_glossiness = 15.0
shader_param/specular_threshold = 0.5
shader_param/specular_softness = 0.1
shader_param/rim_threshold = 0.25
shader_param/rim_softness = 0.05
shader_param/rim_spread = 0.5
shader_param/shadow_threshold = 0.7
shader_param/shadow_softness = 0.1

[sub_resource type="ArrayMesh" id=7]
surfaces/0 = {
"aabb": AABB( -1.02887, -1.02887, -1.02887, 2.05773, 2.05774, 2.05774 ),
"array_data": PoolByteArray( 238, 177, 131, 191, 238, 177, 131, 63, 238, 177, 131, 63, 129, 0, 0, 0, 0, 127, 0, 127, 0, 57, 0, 60, 238, 177, 131, 191, 238, 177, 131, 191, 238, 177, 131, 191, 129, 0, 0, 0, 0, 127, 0, 127, 0, 54, 0, 58, 238, 177, 131, 191, 238, 177, 131, 191, 238, 177, 131, 63, 129, 0, 0, 0, 0, 127, 0, 127, 0, 54, 0, 60, 238, 177, 131, 191, 238, 177, 131, 63, 238, 177, 131, 191, 0, 0, 129, 0, 0, 127, 0, 127, 0, 57, 0, 58, 238, 177, 131, 63, 238, 177, 131, 191, 238, 177, 131, 191, 0, 0, 129, 0, 0, 127, 0, 127, 0, 54, 0, 56, 238, 177, 131, 191, 238, 177, 131, 191, 238, 177, 131, 191, 0, 0, 129, 0, 0, 127, 0, 127, 0, 54, 0, 58, 238, 177, 131, 63, 238, 177, 131, 63, 238, 177, 131, 191, 127, 0, 0, 0, 0, 127, 0, 127, 0, 57, 0, 56, 238, 177, 131, 63, 238, 177, 131, 191, 238, 177, 131, 63, 127, 0, 0, 0, 0, 127, 0, 127, 0, 54, 0, 52, 238, 177, 131, 63, 238, 177, 131, 191, 238, 177, 131, 191, 127, 0, 0, 0, 0, 127, 0, 127, 0, 54, 0, 56, 238, 177, 131, 63, 238, 177, 131, 63, 238, 177, 131, 63, 0, 0, 127, 0, 0, 127, 0, 127, 0, 57, 0, 52, 238, 177, 131, 191, 238, 177, 131, 191, 238, 177, 131, 63, 0, 0, 127, 0, 0, 127, 0, 127, 0, 54, 0, 0, 238, 177, 131, 63, 238, 177, 131, 191, 238, 177, 131, 63, 0, 0, 127, 0, 0, 127, 0, 127, 0, 54, 0, 52, 238, 177, 131, 63, 238, 177, 131, 191, 238, 177, 131, 191, 0, 129, 0, 0, 127, 0, 0, 127, 0, 54, 0, 56, 238, 177, 131, 191, 238, 177, 131, 191, 238, 177, 131, 63, 0, 129, 0, 0, 127, 0, 0, 127, 0, 48, 0, 52, 238, 177, 131, 191, 238, 177, 131, 191, 238, 177, 131, 191, 0, 129, 0, 0, 127, 0, 0, 127, 0, 48, 0, 56, 238, 177, 131, 191, 238, 177, 131, 63, 238, 177, 131, 191, 0, 127, 0, 0, 129, 0, 0, 127, 0, 59, 0, 56, 238, 177, 131, 63, 238, 177, 131, 63, 238, 177, 131, 63, 0, 127, 0, 0, 129, 0, 0, 127, 0, 57, 0, 52, 238, 177, 131, 63, 238, 177, 131, 63, 238, 177, 131, 191, 0, 127, 0, 0, 129, 0, 0, 127, 0, 57, 0, 56, 238, 177, 131, 191, 238, 177, 131, 63, 238, 177, 131, 191, 129, 0, 0, 0, 0, 127, 0, 127, 0, 57, 0, 58, 238, 177, 131, 63, 238, 177, 131, 63, 238, 177, 131, 191, 0, 0, 129, 0, 0, 127, 0, 127, 0, 57, 0, 56, 238, 177, 131, 63, 238, 177, 131, 63, 238, 177, 131, 63, 127, 0, 0, 0, 0, 127, 0, 127, 0, 57, 0, 52, 238, 177, 131, 191, 238, 177, 131, 63, 238, 177, 131, 63, 0, 0, 127, 0, 0, 127, 0, 127, 0, 57, 0, 0, 238, 177, 131, 63, 238, 177, 131, 191, 238, 177, 131, 63, 0, 129, 0, 0, 127, 0, 0, 127, 0, 54, 0, 52, 238, 177, 131, 191, 238, 177, 131, 63, 238, 177, 131, 63, 0, 127, 0, 0, 129, 0, 0, 127, 0, 59, 0, 52 ),
"array_index_data": PoolByteArray( 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 0, 11, 0, 12, 0, 13, 0, 14, 0, 15, 0, 16, 0, 17, 0, 0, 0, 18, 0, 1, 0, 3, 0, 19, 0, 4, 0, 6, 0, 20, 0, 7, 0, 9, 0, 21, 0, 10, 0, 12, 0, 22, 0, 13, 0, 15, 0, 23, 0, 16, 0 ),
"blend_shape_data": [  ],
"format": 97559,
"index_count": 36,
"primitive": 4,
"skeleton_aabb": [  ],
"vertex_count": 24
}

[sub_resource type="SpatialMaterial" id=8]
albedo_color = Color( 0, 0, 0, 1 )

[sub_resource type="ArrayMesh" id=9]
surfaces/0 = {
"aabb": AABB( -1.02887, -1.02887, -1.02887, 2.05773, 2.05774, 2.05774 ),
"array_data": PoolByteArray( 238, 177, 131, 191, 238, 177, 131, 63, 238, 177, 131, 63, 129, 0, 0, 0, 0, 127, 0, 127, 0, 57, 0, 60, 238, 177, 131, 191, 238, 177, 131, 191, 238, 177, 131, 191, 129, 0, 0, 0, 0, 127, 0, 127, 0, 54, 0, 58, 238, 177, 131, 191, 238, 177, 131, 191, 238, 177, 131, 63, 129, 0, 0, 0, 0, 127, 0, 127, 0, 54, 0, 60, 238, 177, 131, 191, 238, 177, 131, 63, 238, 177, 131, 191, 0, 0, 129, 0, 0, 127, 0, 127, 0, 57, 0, 58, 238, 177, 131, 63, 238, 177, 131, 191, 238, 177, 131, 191, 0, 0, 129, 0, 0, 127, 0, 127, 0, 54, 0, 56, 238, 177, 131, 191, 238, 177, 131, 191, 238, 177, 131, 191, 0, 0, 129, 0, 0, 127, 0, 127, 0, 54, 0, 58, 238, 177, 131, 63, 238, 177, 131, 63, 238, 177, 131, 191, 127, 0, 0, 0, 0, 127, 0, 127, 0, 57, 0, 56, 238, 177, 131, 63, 238, 177, 131, 191, 238, 177, 131, 63, 127, 0, 0, 0, 0, 127, 0, 127, 0, 54, 0, 52, 238, 177, 131, 63, 238, 177, 131, 191, 238, 177, 131, 191, 127, 0, 0, 0, 0, 127, 0, 127, 0, 54, 0, 56, 238, 177, 131, 63, 238, 177, 131, 63, 238, 177, 131, 63, 0, 0, 127, 0, 0, 127, 0, 127, 0, 57, 0, 52, 238, 177, 131, 191, 238, 177, 131, 191, 238, 177, 131, 63, 0, 0, 127, 0, 0, 127, 0, 127, 0, 54, 0, 0, 238, 177, 131, 63, 238, 177, 131, 191, 238, 177, 131, 63, 0, 0, 127, 0, 0, 127, 0, 127, 0, 54, 0, 52, 238, 177, 131, 63, 238, 177, 131, 191, 238, 177, 131, 191, 0, 129, 0, 0, 127, 0, 0, 127, 0, 54, 0, 56, 238, 177, 131, 191, 238, 177, 131, 191, 238, 177, 131, 63, 0, 129, 0, 0, 127, 0, 0, 127, 0, 48, 0, 52, 238, 177, 131, 191, 238, 177, 131, 191, 238, 177, 131, 191, 0, 129, 0, 0, 127, 0, 0, 127, 0, 48, 0, 56, 238, 177, 131, 191, 238, 177, 131, 63, 238, 177, 131, 191, 0, 127, 0, 0, 129, 0, 0, 127, 0, 59, 0, 56, 238, 177, 131, 63, 238, 177, 131, 63, 238, 177, 131, 63, 0, 127, 0, 0, 129, 0, 0, 127, 0, 57, 0, 52, 238, 177, 131, 63, 238, 177, 131, 63, 238, 177, 131, 191, 0, 127, 0, 0, 129, 0, 0, 127, 0, 57, 0, 56, 238, 177, 131, 191, 238, 177, 131, 63, 238, 177, 131, 191, 129, 0, 0, 0, 0, 127, 0, 127, 0, 57, 0, 58, 238, 177, 131, 63, 238, 177, 131, 63, 238, 177, 131, 191, 0, 0, 129, 0, 0, 127, 0, 127, 0, 57, 0, 56, 238, 177, 131, 63, 238, 177, 131, 63, 238, 177, 131, 63, 127, 0, 0, 0, 0, 127, 0, 127, 0, 57, 0, 52, 238, 177, 131, 191, 238, 177, 131, 63, 238, 177, 131, 63, 0, 0, 127, 0, 0, 127, 0, 127, 0, 57, 0, 0, 238, 177, 131, 63, 238, 177, 131, 191, 238, 177, 131, 63, 0, 129, 0, 0, 127, 0, 0, 127, 0, 54, 0, 52, 238, 177, 131, 191, 238, 177, 131, 63, 238, 177, 131, 63, 0, 127, 0, 0, 129, 0, 0, 127, 0, 59, 0, 52 ),
"array_index_data": PoolByteArray( 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 0, 11, 0, 12, 0, 13, 0, 14, 0, 15, 0, 16, 0, 17, 0, 0, 0, 18, 0, 1, 0, 3, 0, 19, 0, 4, 0, 6, 0, 20, 0, 7, 0, 9, 0, 21, 0, 10, 0, 12, 0, 22, 0, 13, 0, 15, 0, 23, 0, 16, 0 ),
"blend_shape_data": [  ],
"format": 97559,
"index_count": 36,
"primitive": 4,
"skeleton_aabb": [  ],
"vertex_count": 24
}

[sub_resource type="SpatialMaterial" id=10]
albedo_color = Color( 0, 0, 0, 1 )
rim_enabled = true
rim = 1.0
rim_tint = 0.66

[sub_resource type="CubeMesh" id=11]

[node name="Room" instance=ExtResource( 1 )]
roomName = "CubeRoom"
roomID = "CubeRoom"

[node name="Camera" parent="." index="0"]
transform = Transform( 0.716302, 0.325956, -0.61698, 0, 0.884191, 0.467126, 0.69779, -0.334604, 0.633348, -31.2336, 25.3737, 32.0315 )
projection = 1
size = 50.2734

[node name="ClickableCube" parent="Objects" index="0" instance=ExtResource( 3 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 9.08483, 3.34261, 0 )

[node name="Activator" parent="Objects/ClickableCube" index="1"]
script = SubResource( 1 )

[node name="ClickArea" parent="Objects/ClickableCube" index="2"]
ActivatorName = "Cube"

[node name="CollisionShape" type="CollisionShape" parent="Objects/ClickableCube/ClickArea" index="0"]
shape = SubResource( 2 )

[node name="MeshInstance" type="MeshInstance" parent="Objects/ClickableCube" index="3"]
mesh = SubResource( 3 )
material/0 = SubResource( 6 )

[node name="cube_room" parent="." index="3" instance=ExtResource( 2 )]
transform = Transform( -1.62921e-07, 0, -1, 0, 1, 0, 1, 0, -1.62921e-07, 0, 0, 0 )

[node name="MeshInstance" type="MeshInstance" parent="cube_room/Cube001" index="0"]
visible = false
mesh = SubResource( 7 )
material/0 = SubResource( 8 )

[node name="Cube002" parent="cube_room" index="2"]
transform = Transform( -6.55671e-07, 0.5, 3.26874e-07, 0, -2.18557e-08, 7.47801, 15, 2.18557e-08, 1.42881e-14, -15.4195, 6.98527, 0 )

[node name="MeshInstance" type="MeshInstance" parent="cube_room/Cube002" index="0"]
visible = false
mesh = SubResource( 9 )
material/0 = SubResource( 10 )

[node name="Cube" parent="cube_room" index="3"]
material/0 = ExtResource( 4 )

[node name="OmniLight" type="OmniLight" parent="cube_room" index="6"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 13.3834, 0 )
omni_range = 32.2

[node name="OmniLight2" type="OmniLight" parent="cube_room" index="7"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 21.6315, 24.0924, -33.907 )
omni_range = 32.2

[node name="OmniLight3" type="OmniLight" parent="cube_room" index="8"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -9.99815, 21.16, 22.6833 )
omni_range = 32.2

[node name="MeshInstance" type="MeshInstance" parent="cube_room" index="9"]
transform = Transform( 0.318693, 0, 4.30795e-07, 0, 4.63631, 0, 4.30795e-07, 0, 2.96289, -14.9829, 4.97232, 2.44103e-06 )
mesh = SubResource( 11 )
material/0 = null

[editable path="Objects/ClickableCube"]

[editable path="cube_room"]
