[gd_scene load_steps=36 format=2]

[ext_resource path="res://BasicEntities/Room/BaseRoom.tscn" type="PackedScene" id=1]
[ext_resource path="res://Content/Locations/FortressOfChains/SpiritSummoningRoom/SpiritSummoningRoom.gd" type="Script" id=2]
[ext_resource path="res://Assets/Sprites/Rooms/RoomBrickBlack.png" type="Texture" id=3]
[ext_resource path="res://Assets/Sprites/Decorations/Pentagram.png" type="Texture" id=4]
[ext_resource path="res://BasicEntities/Interactable/BaseObject.tscn" type="PackedScene" id=5]
[ext_resource path="res://Content/Locations/00001PentagramRoom/Graphics/Door.png" type="Texture" id=6]
[ext_resource path="res://Assets/Sprites/Interactables/Furniture/Drawer.png" type="Texture" id=7]
[ext_resource path="res://Assets/Placeholders/adeptmastersorc.png" type="Texture" id=8]
[ext_resource path="res://Assets/Placeholders/aerialshackles.png" type="Texture" id=9]
[ext_resource path="res://Assets/Sprites/Interactables/Characters/SummonerSleeping.png" type="Texture" id=10]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

onready var interaction_window = $\"/root/InteractionWindow\"

signal room_cleared

func _on_Room_room_loaded():
	if $\"/root/Room\".get_self_parameter(\"pentagram_on\", true):
		$InitialCutscene.call_deferred(\"start_cutscene\")
	else:
		$\"../DarknessFull\".queue_free()
		$\"../DarknessPartial\".queue_free()

func activate_summoner():
	$SummonerCutscene.call_deferred(\"start_cutscene\")
	yield($SummonerCutscene, \"finished\")
	print(\"FINISHED\")
	$\"../Summoner/Pickler\".is_there = false
	$\"../Summoner/Pickler\".pickle()
	clear_room()
	
func clear_room():
	emit_signal(\"room_cleared\")
	

\"\"\"
func activate_summoner():
	interaction_window.start()
	interaction_window.say(\"The Summoner is chilling in his chair\")
	interaction_window.add_reply(\"Print into console\", self, \"print_into_console\")
	interaction_window.add_reply(\"Wake him up\", self, \"wake_up_summoner\")
	interaction_window.add_reply(\"Leave him be\", self, \"leave_him_be\")
	
func print_into_console():
	print(\"Action activated\")
	interaction_window.say(\"OK, this should be printed\")
	
func wake_up_summoner():
	interaction_window.say(\"The summoner is woken up\")
	$\"/root/Room\".set_self_parameter(\"pentagram_on\", false)
	$\"/root/Room\".clear_room()
	$\"/root/Room\".place_package()
	interaction_window.clear_replies()
	interaction_window.add_reply(\"OK\", interaction_window, \"hide\")
	
func leave_him_be():
	interaction_window.say(\"You decide to not interrupt him\")
	interaction_window.clear_replies()
	interaction_window.add_reply(\"OK\", interaction_window, \"hide\")

func _on_Room_room_loaded():
	if $\"/root/Room\".get_self_parameter(\"pentagram_on\", true):
		interaction_window.start()
		interaction_window.say(\"You awaken in the middle of a pentagram\")
		interaction_window.add_reply(\"OK\", interaction_window, \"hide\")
\"\"\"
"

[sub_resource type="GDScript" id=2]
script/source = "extends Node

\"\"\"
This is the first thing the Player sees when he wakes up in the pentagram.
Starts with a black screen and a small narration.
\"\"\"

onready var interaction_window = $\"/root/InteractionWindow\"
onready var mode = $\"/root/ModeController\"

var aborted = false

func skip():
	aborted = true
	$\"/root/Room/Player\".visible = true	
	mode.stop_cutscene()
	interaction_window.hide()
	if $\"../../DarknessPartial\": $\"../../DarknessPartial\".queue_free()
	if $\"../../DarknessFull\": $\"../../DarknessFull\".queue_free()
	queue_free()

func start_cutscene():
	$\"/root/DeveloperConsole\".connect(\"skip_cutscene\", self, \"skip\")
	
	$\"/root/Room/Player\".visible = false
	mode.start_cutscene()
	$\"../../DarknessFull\".visible = true
	$\"../../DarknessPartial\".visible = true
	yield(get_tree().create_timer(1.5), \"timeout\")
	interaction_window.start()
	interaction_window.say(\"The voices were gone. Not merely silent; I could feel that the God of Life and Death and the Goddess of Everything Else were no longer here. It was still dark. But it was not just the cold, empty darkness of oblivion that used to be. There was more. Notably, I seemed to be lying on a floor. This was a big change from the overwhelming nothing of my previous existence. \")
	interaction_window.say(\"Floors are good. Floors are real. You can always rely on floors to support you. I'm on a floor, therefore, I am.\")
	interaction_window.say(\"I felt around on the floor. Nothing. Flat, cold surface.\")
	interaction_window.say(\"I felt around my body. Nothing?\")
	interaction_window.say(\"I raised my hands to my face. I couldn't feel it. I wasn't even sure if I had hands, or a face. I was just a bunch of senses lying on the floor, feeling the floor, and nothing else. \")
	interaction_window.say(\"There wasn't even me here. Just the floor. Endlessly stretching, flat, emotionless, pointless; defined just by how it feels to the touch. The entire universe bared down to one simple sensation. \")
	interaction_window.say(\"A cold shiver went down my spine. I couldn't breathe. My whole body went tense, shaking. A sense of dread had overtaken me.\")
	interaction_window.say(\"It meant that I had a spine, that I had lungs, that there was a body that was me.\")
	interaction_window.say(\"It also made me realize that my eyes were closed.\")
	interaction_window.say(\"Actually, scratch that. It occurred to me that I *had* eyes. I mean, sure, they don't see anything, but that was a fixable problem.\")
	interaction_window.add_reply(\"Open my eyes a little\", self, \"stage2\")
	
func stage2():
	interaction_window.hide()
	$\"../../DarknessFull/AnimationPlayer\".play(\"Fadeout\")
	yield($\"../../DarknessFull/AnimationPlayer\", \"animation_finished\")
	$\"../../DarknessFull\".queue_free()
	yield(get_tree().create_timer(1.0), \"timeout\")
	interaction_window.start()
	interaction_window.say(\"Yes, this sure was a floor. It looked like a floor, and it did floory things like being under and not letting me fall through. This little observation made the shivering sense of dread subside a little. This time again, I couldn't feel my limbs, or my spine, or my breath. But I knew they were there. In the future, whenever I feel too anxious about not being real, I can always summon a panic attack to calm me down.\") # Awkward writing?
	interaction_window.say(\"I stood up, as much as one can stand up when they can't feel their legs.\")
	interaction_window.add_reply(\"Look around\", self, \"stage3\")

func stage3():
	interaction_window.hide()
	$\"/root/Room/Player\".visible = true	
	$\"../../DarknessPartial/AnimationPlayer\".play(\"Fadeout\")
	yield($\"../../DarknessPartial/AnimationPlayer\", \"animation_finished\")
	$\"../../DarknessPartial\".queue_free()
	mode.stop_cutscene()
	self.listen_to_click_for_stage_3 = true
	
var listen_to_click_for_stage_3 = false

func _input(event):
	if not listen_to_click_for_stage_3:
		return
	if not event is InputEventMouseButton:
		return
	if event.button_index != BUTTON_LEFT or not event.pressed:
		return
	listen_to_click_for_stage_3 = false
	interaction_window.start()
	interaction_window.say(\"I tried to move away, and I bumped into something. Up from the pentagram drawn on the floor, there was an invisible wall surrounding me. Essentially, I was trapped.\")
	interaction_window.add_reply(\"OK\", self, \"stage4\")
	
func stage4():
	interaction_window.hide()
	queue_free()"

[sub_resource type="GDScript" id=3]
script/source = "extends Node

\"\"\"
This is what happens when the player has woken up the Summoner.
Includes a combat tutorial.
\"\"\"

signal finished

onready var iw = $\"/root/InteractionWindow\"
onready var mode = $\"/root/ModeController\"

onready var spirit_face = preload(\"res://Assets/Placeholders/ancestralsprit.png\")
onready var summoner_face = preload(\"res://Assets/Placeholders/archer.png\")
onready var shady_face = preload(\"res://Assets/Placeholders/banish.png\")
onready var blob_face = preload(\"res://Assets/Placeholders/backpack.png\")

var aborted = false

func skip():
	aborted = true
	mode.stop_cutscene()
	iw.hide()
	#assert(false)
	#queue_free()
	$\"/root/CombatController\".start_combat(load(\"res://Content/Locations/FortressOfChains/SpiritSummoningRoom/CombatVibeCheck.tscn\"))
	print(yield($\"/root/CombatController\", \"combat_over\"))
	emit_signal(\"finished\")
	
signal contn

func contn(response=[]):
	emit_signal(\"contn\", response)

func start_cutscene():
	$\"/root/CombatController\".start_combat(load(\"res://Content/Locations/FortressOfChains/SpiritSummoningRoom/CombatVibeCheck.tscn\"))
	
	print(yield($\"/root/CombatController\", \"combat_over\"))
	
	emit_signal(\"finished\")
	
	return
	
	$\"/root/DeveloperConsole\".connect(\"skip_cutscene\", self, \"skip\")
	
	$\"/root/Room/Player\".visible = true
	mode.start_cutscene()
	
	iw.start()
	iw.say(\"I tried to knock at the invisible wall, but it didn't make a sound; the force of my hits was just completely absorbed.\")
	iw.sayf(spirit_face, \"Hey! Hey! Wake up!\")
	iw.say(\"The man jumped in his chair, awake and startled at the sound of my voice. \")
	iw.sayf(summoner_face, \"By the Lord, they're awake!\")
	iw.say(\"He approached the strange black blob lying on the floor.\")
	iw.sayf(summoner_face, \"Assistant! Wake up! The Spirit has arrived!\")
	iw.say(\"The blob on the floor wiggled a little.\")
	iw.add_reply(\"Watch\", self, \"contn\")
	yield(self, \"contn\")
	iw.clear_replies()
	iw.sayf(summoner_face, \"Assistant! Shady!\")
	iw.say(\"He removed a long stick from under his robes and poked the blob a few times. The blob responded in a tinny female voice.\")
	iw.sayf(blob_face, \"Just five more minutes!\")
	iw.sayf(summoner_face, \"No.\")
	iw.say(\"He poked the blob with a stick again.\")
	iw.sayf(blob_face, \"Ugh...\")
	iw.add_reply(\"Watch\", self, \"contn\")
	yield(self, \"contn\")
	iw.hide()
	yield(get_tree().create_timer(0.5), \"timeout\")
	#play_shady_animation()
	iw.clear_replies()
	iw.start()
	iw.say(\"The blob has transformed into a humanoid shape (TODO: how to present this propery? What kind of cutscene goes here?\")
	iw.sayf(shady_face, \"Sup.\")
	iw.sayf(summoner_face, \"Good morning, Shady.\")
	iw.say(\"He turned towards me and made a presenting gesture.\")
	iw.sayf(summoner_face, \"Behold! The fruit of our labor, the result of our summons!\")
	iw.sayf(summoner_face, \"The Spirit!\")
	iw.sayf(shady_face, \"Huh. Is it really them?\")
	iw.sayf(summoner_face, \"Does it look like them?\")
	iw.sayf(shady_face, \"I have no idea what they were supposed to look like.\")
	iw.add_reply(\"\\\"Uh, listen...\\\"\", self, \"contn\")
	yield(self, \"contn\")
	iw.clear_replies()
	iw.start()
	iw.sayf(summoner_face, \"Stop! Don't speak yet.\")
	iw.say(\"He walked up to the pentagram.\")
	iw.sayf(summoner_face, \"Stay calm, stay focused. It's okay. You're here, in the Fortress, safe and sound. Everything is going according to the plan. Take a few breaths and recenter yourself.\")
	iw.sayf(summoner_face, \"You may feel like you don't exist, or that the world is not real, or that I'm just a voice in your head, or something like that.\")
	iw.sayf(summoner_face, \"Don't panic. Just breathe.\")
	iw.add_reply(\"Breathe\", self, \"contn\")
	yield(self, \"contn\")
	iw.clear_replies()
	iw.say(\"I took a deep, slow breath. I immediately felt a little dizzy and had to lean on the pentagram wall not to fall down.\")
	iw.sayf(summoner_face, \"Take it slow.\")
	iw.say(\"I took a few more breaths. I could feel my lungs expanding and my diaphragm moving.\")
	iw.sayf(shady_face, \"Hey, Spirit! What's two plus two?\")
	iw.add_reply(\"Four\", self, \"contn\", \"Four\")
	iw.add_reply(\"Twenty three\", self, \"contn\", \"Twenty three\")
	iw.add_reply(\"Fish\", self, \"contn\", \"Fish\")
	var resp = yield(self, \"contn\")
	iw.clear_replies()
	match resp:
		\"Four\":
			iw.sayf(spirit_face, \"Four.\")
			iw.sayf(summoner_face, \"Good. You're surprisingly lucid, all things considered.\")
			iw.sayf(summoner_face, \"Let's run some tests on you, to check your vitals.\")
		\"Twenty three\":
			iw.sayf(spirit_face, \"Twenty three.\")
			iw.sayf(summoner_face, \"That's... not good.\")
			iw.sayf(summoner_face, \"We'll need to run some tests on you to make sure you can survive.\")
		\"Fish\":
			iw.sayf(spirit_face, \"Fish.\")
			iw.sayf(summoner_face, \"Oh... well.\")
			iw.sayf(summoner_face, \"You seem to still be in a state of some confusion.\")
			iw.sayf(summoner_face, \"Let's just stay focused, okay?\")
			iw.sayf(summoner_face, \"We'll run some tests on you.\")
			iw.sayf(summoner_face, \"Just basic vitals.\")
		var x:
			iw.say(\"ERROR: unexpacted response: %s\" % str(x))
	iw.sayf(summoner_face, \"Concentrate on yourself.\")
	iw.sayf(summoner_face, \"How do you feel?\")

	iw.add_reply(\"I feel like nothing\", self, \"contn\", \"I feel like nothing\")
	iw.add_reply(\"I feel incomplete\", self, \"contn\", \"I feel incomplete\")
	iw.add_reply(\"I feel trapped\", self, \"contn\", \"I feel trapped\")
	resp = yield(self, \"contn\")
	iw.clear_replies()
	match resp:
		\"I feel like nothing\":
			iw.sayf(spirit_face, \"I feel like nothing. Like I'm not even there.\")
			iw.sayf(spirit_face, \"Occasionally I can force myself to feel my limbs, or to focus on a sensation.\")
			iw.sayf(spirit_face, \"But mostly, I don't even feel like I really exist.\")
			iw.sayf(spirit_face, \"Fish.\")
			iw.sayf(summoner_face, \"It makes sense. You're not fully embodied at this point.\")
			iw.sayf(summoner_face, \"This will pass, eventually. You can do some physical exercises to speed up the process.\")
			iw.sayf(summoner_face, \"Later, we'll work on learning grounding activities that will help you anchor yourself to the present.\")
		\"I feel incomplete\":
			iw.sayf(spirit_face, \"I feel incomplete. Like something is missing.\")
			iw.sayf(spirit_face, \"I can't put my finger on it. I need... something.\")
			iw.sayf(spirit_face, \"It's like a craving for a specific food, except it's not about food, but about me as a whole.\")
			iw.sayf(summoner_face, \"This is to be expected.\")
			iw.sayf(summoner_face,  \"The summoning ritual is imperfect. Some parts of you might literally not be present.\")
			iw.sayf(summoner_face, \"This is fixable, and we will fix it.\")
		\"I feel trapped\":
			iw.sayf(spirit_face, \"I feel trapped. Quite literally.\")
			iw.sayf(spirit_face, \"I'm locked behind a forcefield, in some kind of fortress.\")
			iw.sayf(spirit_face, \"I don't know who I am, where I am, and what's going on.\")
			iw.sayf(spirit_face, \"I'm completely on the mercy of the forces I have no control over.\")
			iw.sayf(summoner_face, \"We do not intend to keep you locked up.\")
			iw.sayf(summoner_face, \"The pentagram is just a basic safety precaution; don' t take it the wrong way.\")
			iw.say(\"Out of the corner of my eye, I saw Shady putting a finger gun to her temple and pretending to fire it.\")
			iw.sayf(summoner_face, \"Once you're completely grounded and self-associated, we'll let you go.\")
		var x:
			iw.say(\"ERROR: unexpacted response: %s\" % str(x))
			
	iw.sayf(summoner_face, \"Now we'll need to check your reaction speed and hand-eye coordination.\")
	iw.sayf(summoner_face, \"Ready?\")

	iw.add_reply(\"Ready!\", self, \"contn\")
	iw.add_reply(\"For what?!\", self, \"contn\")
	resp = yield(self, \"contn\")
	iw.clear()
	iw.hide()



\"\"\"
func stage2():
	iw.hide()
	$\"../../DarknessFull/AnimationPlayer\".play(\"Fadeout\")
	yield($\"../../DarknessFull/AnimationPlayer\", \"animation_finished\")
	$\"../../DarknessFull\".queue_free()
	yield(get_tree().create_timer(1.0), \"timeout\")
	interaction_window.start()
	interaction_window.say(\"Yes, this sure was a floor. It looked like a floor, and it did floory things like being under and not letting me fall through. This little observation made the shivering sense of dread subside a little. This time again, I couldn't feel my limbs, or my spine, or my breath. But I knew they were there. In the future, whenever I feel too anxious about not being real, I can always summon a panic attack to calm me down.\") # Awkward writing?
	interaction_window.say(\"I stood up, as much as one can stand up when they can't feel their legs.\")
	interaction_window.add_reply(\"Look around\", self, \"stage3\")

func stage3():
	interaction_window.hide()
	$\"/root/Room/Player\".visible = true	
	$\"../../DarknessPartial/AnimationPlayer\".play(\"Fadeout\")
	yield($\"../../DarknessPartial/AnimationPlayer\", \"animation_finished\")
	$\"../../DarknessPartial\".queue_free()
	mode.stop_cutscene()
	self.listen_to_click_for_stage_3 = true
	
var listen_to_click_for_stage_3 = false

func _input(event):
	if not listen_to_click_for_stage_3:
		return
	if not event is InputEventMouseButton:
		return
	if event.button_index != BUTTON_LEFT or not event.pressed:
		return
	listen_to_click_for_stage_3 = false
	interaction_window.start()
	interaction_window.say(\"I tried to move away, and I bumped into something. Up from the pentagram drawn on the floor, there was an invisible wall surrounding me. Essentially, I was trapped.\")
	interaction_window.add_reply(\"OK\", self, \"stage4\")
	
func stage4():
	interaction_window.hide()
	queue_free()\"\"\""

[sub_resource type="GDScript" id=4]
script/source = "extends Node2D

onready var left_edge_of_room = $RailroadLeft
onready var left_edge_of_pent = $LeftEdgeOfPentagram

func unlock_pentagram():
	if left_edge_of_pent.position.x < left_edge_of_room.position.x:
		var tmp = left_edge_of_pent.position
		left_edge_of_pent.position = left_edge_of_room.position
		left_edge_of_room.position = tmp
	$\"../Background/Pentagram\".modulate = Color(0.145098, 0.145098, 0.145098)
		
func lock_pentagram():
	if left_edge_of_pent.position.x > left_edge_of_room.position.x:
		var tmp = left_edge_of_pent.position
		left_edge_of_pent.position = left_edge_of_room.position
		left_edge_of_room.position = tmp
	$\"../Background/Pentagram\".modulate = Color(1, 1, 1)

func _on_Director_room_cleared():
	unlock_pentagram()
"

[sub_resource type="GDScript" id=5]
script/source = "extends Activator

func on_activate():
	if not $\"/root/Room\".get_self_parameter(\"pentagram_on\", false):
		if $\"../Pickler\".is_locked:
			blurb(\"The door is locked\")
		else:
			get_node(\"/root/RoomSwitcher\").switch_room_by_name(\"res://Content/Locations/FortressOfChains/Corridor/Corridor.tscn\")
	else:
		blurb(\"I can't reach the door from here.\")"

[sub_resource type="GDScript" id=6]
script/source = "extends Node

func doorCode():
	return \"SpiritSummoningRoomDoor\"
	
func unlock():
	$\"../Pickler\".is_locked = false"

[sub_resource type="GDScript" id=7]
script/source = "extends BasePickler

var is_locked:bool = false


func deserialize(params:Dictionary)->void:
	is_locked = params.get(\"is_locked\", true)

func serialize()->Dictionary:
	return {\"is_locked\": is_locked}

func default_parameters()->Dictionary:
	return {\"is_locked\": true}"

[sub_resource type="GDScript" id=8]
script/source = "extends Activator

func on_activate():
	if not $\"/root/Room\".get_self_parameter(\"pentagram_on\", false):
		blurb(\"This sure is a drawer\")
	else:
		blurb(\"I can't reach the drawer.\")"

[sub_resource type="GDScript" id=9]
script/source = "extends BasePickler


func deserialize(params:Dictionary)->void:
	pass

func serialize()->Dictionary:
	return {}

func default_parameters()->Dictionary:
	return {}"

[sub_resource type="GDScript" id=10]
script/source = "extends Activator

func on_activate():
	if $\"/root/Room\".get_self_parameter(\"pentagram_on\", false):
		blurb(\"What is this? I can't reach it from here.\")
	else:
		blurb(\"Some kind of a control panel\")"

[sub_resource type="GDScript" id=11]
script/source = "extends BasePickler

var interaction_type = \"\" # \"did not\" \"brutality\" \"dogma\" \"vitality\"

func deserialize(params:Dictionary)->void:
	interaction_type = params[\"interaction_type\"]

func serialize()->Dictionary:
	return {\"interaction_type\" : interaction_type}

func default_parameters()->Dictionary:
	return {
		\"interaction_type\": \"did not\"
	}
	
func interact(type):
	interaction_type = type
	repickle()"

[sub_resource type="GDScript" id=12]
script/source = "extends Activator

func on_activate():
	if $\"/root/Room\".get_self_parameter(\"pentagram_on\", false):
		blurb(\"I can't reach the window from here.\")
	else:
		blurb(\"This sure is a window.\")"

[sub_resource type="GDScript" id=13]
script/source = "extends Activator

func on_activate():
	if $\"/root/Room\".get_self_parameter(\"pentagram_on\", false):
		blurb(\"I can't reach the bed from here.\")
	else:
		blurb(\"This sure is a bed.\")"

[sub_resource type="GDScript" id=14]
script/source = "extends Activator

func on_activate():
	blurb(\"This sure is a chair\")"

[sub_resource type="GDScript" id=15]
script/source = "extends BasePickler

var is_visible = false
var is_near_window = false

func deserialize(params:Dictionary)->void:
	is_visible = params[\"is_visible\"]
	is_near_window = params[\"is_near_window\"]
	if not is_visible:
		$\"..\".visible = false

func serialize()->Dictionary:
	return {
		\"is_visible\": is_visible,
		\"is_near_window\": is_near_window,
	}

func default_parameters()->Dictionary:
	return {
		\"is_visible\": false,
		\"is_near_window\": false,
	}"

[sub_resource type="GDScript" id=16]
script/source = "extends Activator

onready var iw = $\"/root/InteractionWindow\"

func on_activate():
	#$\"/root/ModeController\".hold(preload(\"res://ambush.PNG\"), funcref(self, \"try_activate\"))
	#return
	iw.start()
	iw.say(\"A robed man was sleeping in his chair, snoring.\")
	iw.add_reply(\"Wake him up\", self, \"wake\")
	iw.add_reply(\"Leave him be\", iw, \"hide\")
	
func wake():
	iw.hide()
	$\"/root/Room/Director\".activate_summoner()"

[sub_resource type="GDScript" id=17]
script/source = "extends BasePickler

var is_there = true

func deserialize(params:Dictionary)->void:
	is_there = params[\"is_there\"]
	if not is_there:
		$\"..\".visible = false

func serialize()->Dictionary:
	return {\"is_there\":is_there}

func default_parameters()->Dictionary:
	return {\"is_there\":true}"

[sub_resource type="GDScript" id=18]
script/source = "extends Activator
onready var interaction_window = $\"/root/InteractionWindow\"

func on_activate():
	#$\"/root/ModeController\".hold(preload(\"res://ambush.PNG\"), funcref(self, \"try_activate\"))
	#return
	interaction_window.start()
	interaction_window.say(\"The package is on the floor\")
	interaction_window.add_reply(\"Pick up\", self, \"pick_up\")
	interaction_window.add_reply(\"Leave it be\", interaction_window, \"hide\")

#func try_activate(target:Node2D):
#	print(\"Test activated\")

func pick_up():
	$\"/root/Room\".remove_package()
	$\"../Pickler\".is_looted = true
	interaction_window.say(\"You pick up and open the package!\")
	interaction_window.present_item(\"SpiritSummoningRoomKey\")
	interaction_window.present_item(\"StarterKnife\")
	interaction_window.clear_replies()
	interaction_window.add_reply(\"Read the note\", self, \"read_note\")
	$\"/root/Inventory/Model\".add_item(\"StarterKnife\")
	$\"/root/Inventory/Model\".add_item(\"SpiritSummoningRoomKey\")
	
func read_note():
	$\"/root/BookReader\".display_book(\"This is Shady's note\")
	interaction_window.clear_replies()
	interaction_window.add_reply(\"OK cool\", interaction_window, \"hide\")"

[sub_resource type="GDScript" id=19]
script/source = "extends BasePickler

var is_looted:bool = false


func deserialize(params:Dictionary)->void:
	is_looted = params.get(\"is_looted\", false)
	if is_looted:
		$\"..\".visible = false

func serialize()->Dictionary:
	return {\"is_looted\": is_looted}

func default_parameters()->Dictionary:
	return {\"is_looted\": false}"

[sub_resource type="Gradient" id=20]
offsets = PoolRealArray( 0.554717, 0.664151, 0.767925 )
colors = PoolColorArray( 0, 0, 0, 1, 0.8, 0.8, 0.8, 0, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=21]
gradient = SubResource( 20 )

[sub_resource type="Animation" id=22]
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.9 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Gradient" id=23]
offsets = PoolRealArray( 0.341509 )
colors = PoolColorArray( 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=24]
gradient = SubResource( 23 )

[sub_resource type="Animation" id=25]
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.9 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[node name="Room" index="0" instance=ExtResource( 1 )]
script = ExtResource( 2 )

[node name="Director" type="Node" parent="." index="0"]
editor/display_folded = true
script = SubResource( 1 )

[node name="InitialCutscene" type="Node" parent="Director" index="0"]
script = SubResource( 2 )

[node name="SummonerCutscene" type="Node" parent="Director" index="1"]
script = SubResource( 3 )

[node name="Background" parent="." index="1"]
editor/display_folded = true

[node name="RoomBrickBlack" type="Sprite" parent="Background" index="0"]
position = Vector2( 797.207, 449.385 )
scale = Vector2( 1.47361, 1.50161 )
texture = ExtResource( 3 )

[node name="Pentagram" type="Sprite" parent="Background" index="1"]
position = Vector2( 1092.63, 764.3 )
scale = Vector2( 1.19912, 1.37323 )
texture = ExtResource( 4 )

[node name="Geometry" parent="." index="2"]
editor/display_folded = true
script = SubResource( 4 )

[node name="RailroadLeft" parent="Geometry" index="0"]
position = Vector2( 938.964, 777.14 )

[node name="RailroadRight" parent="Geometry" index="1"]
position = Vector2( 1246.02, 766.957 )

[node name="CameraLimitLeft" parent="Geometry" index="2"]
position = Vector2( 0.703323, 633.368 )

[node name="CameraLimitRight" parent="Geometry" index="3"]
position = Vector2( 1600.32, 650.713 )

[node name="DefaultSpiritSpawn" parent="Geometry" index="4"]
position = Vector2( 1104.23, 773.347 )

[node name="LeftEdgeOfPentagram" type="Position2D" parent="Geometry" index="5"]
position = Vector2( 291.525, 774.563 )

[node name="OutOfDoorSpiritSpawn" type="Position2D" parent="Geometry" index="6"]
position = Vector2( 370.956, 777.074 )

[node name="Door" parent="." index="3" instance=ExtResource( 5 )]
editor/display_folded = true
position = Vector2( 295.288, 730.645 )

[node name="Sprite" parent="Door" index="0"]
position = Vector2( -4.76386, -88.5566 )
scale = Vector2( 1.22454, 1.06758 )
texture = ExtResource( 6 )

[node name="BlurbPoint" parent="Door" index="1"]
position = Vector2( 24.7127, -274.66 )
z_index = 78

[node name="InteractionPoint" parent="Door" index="2"]
position = Vector2( 76.4543, 44.3767 )

[node name="ClickArea" parent="Door" index="3"]
margin_left = -78.0
margin_top = -215.0
margin_right = 53.0
margin_bottom = 44.0
ActivatorName = "Door"

[node name="Activator" parent="Door" index="4"]
script = SubResource( 5 )

[node name="Unlockable" type="Node" parent="Door/Activator" index="0"]
script = SubResource( 6 )

[node name="Pickler" parent="Door" index="5"]
script = SubResource( 7 )

[node name="Drawer" parent="." index="4" instance=ExtResource( 5 )]
editor/display_folded = true
position = Vector2( 554.412, 675.453 )

[node name="Sprite" parent="Drawer" index="0"]
position = Vector2( 1.48926, -79.4826 )
scale = Vector2( 1.9569, 2.01824 )
texture = ExtResource( 7 )

[node name="BlurbPoint" parent="Drawer" index="1"]
position = Vector2( 9.52258, -194.533 )

[node name="InteractionPoint" parent="Drawer" index="2"]
position = Vector2( -2.21606, 38.8365 )

[node name="ClickArea" parent="Drawer" index="3"]
editor/display_folded = true
margin_left = -48.0
margin_top = -138.0
margin_right = 63.0
margin_bottom = -12.0
ActivatorName = "Drawer"

[node name="Activator" parent="Drawer" index="4"]
script = SubResource( 8 )

[node name="Pickler" parent="Drawer" index="5"]
script = SubResource( 9 )

[node name="Panel" parent="." index="5" instance=ExtResource( 5 )]
editor/display_folded = true
position = Vector2( 848.031, 714.893 )

[node name="Sprite" parent="Panel" index="0"]
position = Vector2( -4.76386, -88.5566 )
scale = Vector2( 1.22454, 1.06758 )
texture = ExtResource( 8 )

[node name="BlurbPoint" parent="Panel" index="1"]
position = Vector2( -23.9745, -260.34 )
z_index = 78

[node name="InteractionPoint" parent="Panel" index="2"]
position = Vector2( -13.7602, -14.3343 )

[node name="ClickArea" parent="Panel" index="3"]
margin_left = -43.0
margin_top = -118.0
margin_right = 30.0
margin_bottom = -59.0
ActivatorName = "Panel"

[node name="Activator" parent="Panel" index="4"]
script = SubResource( 10 )

[node name="Pickler" parent="Panel" index="5"]
script = SubResource( 11 )

[node name="Window" parent="." index="6" instance=ExtResource( 5 )]
position = Vector2( 836.575, 481.481 )

[node name="Sprite" parent="Window" index="0"]
position = Vector2( -137.938, -88.5566 )
scale = Vector2( 5.66367, 1.06758 )
texture = ExtResource( 8 )

[node name="BlurbPoint" parent="Window" index="1"]
position = Vector2( -124.213, -240.292 )
z_index = 78

[node name="InteractionPoint" parent="Window" index="2"]
position = Vector2( -125.454, 167.527 )

[node name="ClickArea" parent="Window" index="3"]
margin_left = -306.0
margin_top = -125.0
margin_right = 34.0
margin_bottom = -51.0
ActivatorName = "Window"

[node name="Activator" parent="Window" index="4"]
script = SubResource( 12 )

[node name="Pickler" parent="Window" index="5"]
script = SubResource( 11 )

[node name="Bed" parent="." index="7" instance=ExtResource( 5 )]
editor/display_folded = true
position = Vector2( 836.575, 481.481 )

[node name="Sprite" parent="Bed" index="0"]
position = Vector2( -119.655, 135.267 )
scale = Vector2( 2.6535, 1.10452 )
texture = ExtResource( 8 )

[node name="BlurbPoint" parent="Bed" index="1"]
position = Vector2( -119.781, -7.60483 )
z_index = 78

[node name="InteractionPoint" parent="Bed" index="2"]
position = Vector2( -122.13, 189.687 )

[node name="ClickArea" parent="Bed" index="3"]
margin_left = -186.0
margin_top = 102.0
margin_right = -40.0
margin_bottom = 167.0
ActivatorName = "Bed"

[node name="Activator" parent="Bed" index="4"]
script = SubResource( 13 )

[node name="Pickler" parent="Bed" index="5"]
script = SubResource( 11 )

[node name="Chair" parent="." index="8" instance=ExtResource( 5 )]
editor/display_folded = true
position = Vector2( 612.794, 761.24 )

[node name="Sprite" parent="Chair" index="0"]
position = Vector2( 60.7838, -34.3737 )
scale = Vector2( 1.21872, 1.25692 )
texture = ExtResource( 9 )

[node name="BlurbPoint" parent="Chair" index="1"]
position = Vector2( 71.0476, -233.611 )

[node name="InteractionPoint" parent="Chair" index="2"]
position = Vector2( 62.5452, 65.6498 )

[node name="ClickArea" parent="Chair" index="3"]
margin_left = 18.0
margin_top = -79.0
margin_right = 106.0
margin_bottom = 15.0
ActivatorName = "Chair"

[node name="Activator" parent="Chair" index="4"]
script = SubResource( 14 )

[node name="Pickler" parent="Chair" index="5"]
script = SubResource( 15 )

[node name="Summoner" parent="." index="9" instance=ExtResource( 5 )]
position = Vector2( 616.788, 805.18 )

[node name="Sprite" parent="Summoner" index="0"]
position = Vector2( 60.7838, -34.3737 )
scale = Vector2( 1.21872, 1.25692 )
texture = ExtResource( 10 )

[node name="BlurbPoint" parent="Summoner" index="1"]
position = Vector2( 45.4228, -153.722 )

[node name="InteractionPoint" parent="Summoner" index="2"]
position = Vector2( 193.684, 29.4736 )

[node name="ClickArea" parent="Summoner" index="3"]
margin_top = -109.0
margin_right = 138.0
margin_bottom = 47.0
ActivatorName = "Sleeping man"
activation_type = "Remote"

[node name="Activator" parent="Summoner" index="4"]
script = SubResource( 16 )

[node name="Pickler" parent="Summoner" index="5"]
script = SubResource( 17 )

[node name="Package" parent="." index="10" instance=ExtResource( 5 )]
editor/display_folded = true
visible = false
position = Vector2( 465.129, 784.964 )

[node name="ClickArea" parent="Package" index="3"]
ActivatorName = "Package"

[node name="Activator" parent="Package" index="4"]
script = SubResource( 18 )

[node name="Pickler" parent="Package" index="5"]
script = SubResource( 19 )

[node name="DarknessPartial" type="Sprite" parent="." index="11"]
editor/display_folded = true
visible = false
position = Vector2( 773.613, 447.666 )
scale = Vector2( 0.935373, 1037.27 )
texture = SubResource( 21 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="DarknessPartial" index="0"]
anims/Fadeout = SubResource( 22 )

[node name="DarknessFull" type="Sprite" parent="." index="12"]
editor/display_folded = true
visible = false
position = Vector2( 773.613, 447.666 )
scale = Vector2( 0.935373, 1037.27 )
texture = SubResource( 24 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="DarknessFull" index="0"]
anims/Fadeout = SubResource( 25 )
[connection signal="room_loaded" from="." to="Director" method="_on_Room_room_loaded"]
[connection signal="room_cleared" from="Director" to="." method="_on_Director_room_cleared"]
[connection signal="room_cleared" from="Director" to="Geometry" method="_on_Director_room_cleared"]

[editable path="Door"]

[editable path="Drawer"]

[editable path="Panel"]

[editable path="Window"]

[editable path="Bed"]

[editable path="Chair"]

[editable path="Summoner"]

[editable path="Package"]
