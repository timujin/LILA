[gd_scene load_steps=18 format=2]

[ext_resource path="res://Locations/00001PentagramRoom/Graphics/TheShade/CombatLeaning.png" type="Texture" id=1]
[ext_resource path="res://Locations/00001PentagramRoom/Graphics/TheSummoner/CombatStanding.png" type="Texture" id=2]
[ext_resource path="res://Assets/Sprites/combat_spirit.png" type="Texture" id=3]
[ext_resource path="res://Assets/Fonts/LilitaOne-Regular.ttf" type="DynamicFontData" id=4]

[sub_resource type="Gradient" id=12]

[sub_resource type="GradientTexture" id=13]
gradient = SubResource( 12 )

[sub_resource type="GDScript" id=1]
script/source = "extends Node

signal combat_over

onready var dialogue_say = get_tree().get_root().get_node(\"/root/DialogueWindow\")
onready var dialogue_reply = get_tree().get_root().get_node(\"/root/DialogueReply\")
onready var mouse_controller = get_tree().get_root().get_node(\"/root/MouseCursorManager\")
onready var mode_controller = get_node(\"/root/ModeController\")
onready var bulletspace = get_node(\"../Bulletspace\")

var face_spirit = preload(\"res://Assets/Sprites/Faces/spirit.png\")
var face_summoner = preload(\"res://Assets/Sprites/Faces/summoner.png\")
var face_shade = preload(\"res://Assets/Sprites/Faces/shade.png\")

var simple_ticking_bullet = preload(\"res://Bullets/SimpleStaticTicking.tscn\")
var simple_moving_bullet = preload(\"res://Bullets/SimpleMoving.tscn\")


# Called when the node enters the scene tree for the first time.
func _ready():
	var line1 = \"I'm going to move my hands. You should try and repeat after me. Ready?\"
	#bulletspace.spawn_bullet(simple_ticking_bullet, bulletspace.get_node(\"Round1/SpawnPoint1\").position)
	#return
	dialogue_say.show_dialogue(line1, face_summoner, $DialoguePoint.rect_position, Color.white)
	yield(dialogue_say, \"popup_hide\")
	
	get_node(\"../Tacticalspace\").show()
	yield(get_node(\"../Tacticalspace\"), \"clicked_ready\")
	get_node(\"../Tacticalspace\").hide()
	#get_node(\"../Tacticalspace\").queue_free()
	#get_node(\"/root/DialogueWindow\").queue_free() #.mouse_filter = Control.MOUSE_FILTER_IGNORE
	
	#yield(round1(), \"completed\")
	yield(round2(), \"completed\")
	
	dialogue_say.show_dialogue(\"Combat tutorial over\", face_summoner, $DialoguePoint.rect_position, Color.white)
	yield(dialogue_say, \"popup_hide\")
	mode_controller.mode = mode_controller.GameMode.WORLDSPACE
	emit_signal(\"combat_over\")
	get_parent().queue_free()

# ROUND 1
var r1_total_bullets = 0
var r1_last_attempt_bullets = 0

func on_activate_bullet():
	r1_total_bullets += 1
	r1_last_attempt_bullets += 1

func round1():
	bulletspace.spawn_bullet(simple_ticking_bullet, bulletspace.get_node(\"Round1/SpawnPoint1\").position).\\
		connect(\"activated\", self, \"on_activate_bullet\")
	yield(get_tree().create_timer(1.0), \"timeout\")
	bulletspace.spawn_bullet(simple_ticking_bullet, bulletspace.get_node(\"Round1/SpawnPoint2\").position).\\
		connect(\"activated\", self, \"on_activate_bullet\")
	yield(get_tree().create_timer(1.0), \"timeout\")
	bulletspace.spawn_bullet(simple_ticking_bullet, bulletspace.get_node(\"Round1/SpawnPoint3\").position).\\
		connect(\"activated\", self, \"on_activate_bullet\")
	yield(get_tree().create_timer(1.0), \"timeout\")
	bulletspace.spawn_bullet(simple_ticking_bullet, bulletspace.get_node(\"Round1/SpawnPoint4\").position).\\
		connect(\"activated\", self, \"on_activate_bullet\")
	yield(get_tree().create_timer(1.0), \"timeout\")
	
	if r1_last_attempt_bullets == 4:
		dialogue_say.show_dialogue(\"Great! All 4 bullets caught\", face_summoner, $DialoguePoint.rect_position, Color.white)
		yield(dialogue_say, \"popup_hide\")
		r1_last_attempt_bullets = 0
		r1_total_bullets = 0
		return
		
	if r1_total_bullets >= 8:
		dialogue_say.show_dialogue(\"Passable. 8 bullets total caught.\", face_summoner, $DialoguePoint.rect_position, Color.white)
		yield(dialogue_say, \"popup_hide\")
		r1_last_attempt_bullets = 0
		r1_total_bullets = 0
		return
		
	r1_last_attempt_bullets = 0
	
	dialogue_say.show_dialogue(\"Bad. Let's try again\", face_summoner, $DialoguePoint.rect_position, Color.white)
	yield(dialogue_say, \"popup_hide\")
	
	get_node(\"../Tacticalspace\").show()
	yield(get_node(\"../Tacticalspace\"), \"clicked_ready\")
	get_node(\"../Tacticalspace\").hide()
	
	yield(round1(), \"completed\")
	

func round2():
	bulletspace.spawn_bullet(simple_moving_bullet, bulletspace.get_node(\"Round2/Bullet1\").position, bulletspace.get_node(\"Round2/Bullet1\")).\\
		connect(\"activated\", self, \"on_activate_bullet\")
	yield(get_tree().create_timer(1.0), \"timeout\")
	bulletspace.spawn_bullet(simple_moving_bullet, bulletspace.get_node(\"Round2/Bullet2\").position, bulletspace.get_node(\"Round2/Bullet2\")).\\
		connect(\"activated\", self, \"on_activate_bullet\")
	yield(get_tree().create_timer(1.0), \"timeout\")
	bulletspace.spawn_bullet(simple_moving_bullet, bulletspace.get_node(\"Round2/Bullet3\").position, bulletspace.get_node(\"Round2/Bullet3\")).\\
		connect(\"activated\", self, \"on_activate_bullet\")
	yield(get_tree().create_timer(1.0), \"timeout\")
	bulletspace.spawn_bullet(simple_moving_bullet, bulletspace.get_node(\"Round2/Bullet4\").position, bulletspace.get_node(\"Round2/Bullet4\")).\\
		connect(\"activated\", self, \"on_activate_bullet\")
	yield(get_tree().create_timer(4.0), \"timeout\")
	
	if r1_last_attempt_bullets == 4:
		dialogue_say.show_dialogue(\"Great! All 4 bullets caught\", face_summoner, $DialoguePoint.rect_position, Color.white)
		yield(dialogue_say, \"popup_hide\")
		r1_last_attempt_bullets = 0
		r1_total_bullets = 0
		return
		
	if r1_total_bullets >= 8:
		dialogue_say.show_dialogue(\"Passable. 8 bullets total caught.\", face_summoner, $DialoguePoint.rect_position, Color.white)
		yield(dialogue_say, \"popup_hide\")
		r1_last_attempt_bullets = 0
		r1_total_bullets = 0
		return
		
	r1_last_attempt_bullets = 0
	
	dialogue_say.show_dialogue(\"Bad. Let's try again\", face_summoner, $DialoguePoint.rect_position, Color.white)
	yield(dialogue_say, \"popup_hide\")
	
	get_node(\"../Tacticalspace\").show()
	yield(get_node(\"../Tacticalspace\"), \"clicked_ready\")
	get_node(\"../Tacticalspace\").hide()
	
	yield(round2(), \"completed\")
	
	
	
	
# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass
"

[sub_resource type="GDScript" id=2]
script/source = "extends Control

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

# Called when the node enters the scene tree for the first time.
func _ready():
	visible = false

func display(text:String):
	visible = true
	$Panel/Label.text = text
	$AnimationPlayer.play(\"Appear\")"

[sub_resource type="DynamicFont" id=3]
size = 21
font_data = ExtResource( 4 )

[sub_resource type="Animation" id=4]
resource_name = "Appear"
length = 5.0
tracks/0/type = "value"
tracks/0/path = NodePath(".:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 4.9 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 3.5, 4.9 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="GDScript" id=7]
script/source = "extends Node2D

func spawn_bullet(bullet:PackedScene, position:Vector2 = Vector2(0,0), parent:Node2D = null) -> Node2D:
	print(\"Spawning bullet\")
	var res = bullet.instance()
	if parent == null:
		add_child(res)
	else:
		#print(\"as a child\")
		parent.add_child(res)
	if not res.get(\"position\") == null:
		res.position = position
	return res"

[sub_resource type="GDScript" id=5]
script/source = "extends Node

func start():
	pass"

[sub_resource type="Curve2D" id=8]
_data = {
"points": PoolVector2Array( 0, 0, 0, 0, -150, 500, 0, 0, 0, 0, 40, 540, 0, 0, 0, 0, 80, 530, 0, 0, 0, 0, 110, 510, 0, 0, 0, 0, 160, 500, 0, 0, 0, 0, 190, 480, 0, 0, 0, 0, 230, 480, 0, 0, 0, 0, 270, 480, 0, 0, 0, 0, 330, 480, 0, 0, 0, 0, 370, 480, 0, 0, 0, 0, 390, 480 )
}

[sub_resource type="Curve2D" id=9]
_data = {
"points": PoolVector2Array( 0, 0, 0, 0, 1060, 520, 0, 0, 0, 0, 960, 510, 0, 0, 0, 0, 880, 500, 0, 0, 0, 0, 800, 490, 0, 0, 0, 0, 760, 500, 0, 0, 0, 0, 690, 510, 0, 0, 0, 0, 650, 500 )
}

[sub_resource type="Curve2D" id=10]
_data = {
"points": PoolVector2Array( 0, 0, 0, 0, -60, 190, 0, 0, 0, 0, 40, 200, 0, 0, 0, 0, 120, 230, 0, 0, 0, 0, 160, 260, 0, 0, 0, 0, 220, 290, 0, 0, 0, 0, 320, 360, 0, 0, 0, 0, 380, 360, 0, 0, 0, 0, 410, 370, 0, 0, 0, 0, 420, 380 )
}

[sub_resource type="Curve2D" id=11]
_data = {
"points": PoolVector2Array( 0, 0, 0, 0, 1130, 190, 0, 0, 0, 0, 1000, 200, 0, 0, 0, 0, 870, 240, 0, 0, 0, 0, 790, 310, 0, 0, 0, 0, 690, 380, 0, 0, 0, 0, 610, 380 )
}

[sub_resource type="GDScript" id=6]
script/source = "extends Control

signal clicked_ready

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass

func hide():
	visible = false
	mouse_filter = Control.MOUSE_FILTER_IGNORE
	
func show():
	visible = true
	mouse_filter = Control.MOUSE_FILTER_STOP


func _on_Button_pressed():
	emit_signal(\"clicked_ready\") # Replace with function body.
"

[node name="Combatspace" type="Node2D"]

[node name="BCKG" type="Sprite" parent="."]
position = Vector2( 512, 299.75 )
scale = Vector2( 0.5, 600.5 )
texture = SubResource( 13 )

[node name="Enemies" type="Node" parent="."]

[node name="Shade" type="Sprite" parent="Enemies"]
position = Vector2( 175, 190 )
scale = Vector2( 1.16667, 1 )
texture = ExtResource( 1 )

[node name="Summoner" type="Sprite" parent="Enemies"]
position = Vector2( 520, 160 )
texture = ExtResource( 2 )

[node name="Spirit" type="Sprite" parent="."]
position = Vector2( 510, 480 )
texture = ExtResource( 3 )

[node name="Director" type="Node" parent="."]
script = SubResource( 1 )

[node name="DialoguePoint" type="Control" parent="Director"]
margin_left = 20.0
margin_top = 350.0
margin_right = 60.0
margin_bottom = 390.0

[node name="Cookie" type="Control" parent="Director"]
visible = false
modulate = Color( 1, 1, 1, 0.988299 )
margin_left = 380.0
margin_top = 120.0
margin_right = 670.0
margin_bottom = 160.0
mouse_filter = 2
script = SubResource( 2 )

[node name="Panel" type="Panel" parent="Director/Cookie"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="Label" type="Label" parent="Director/Cookie/Panel"]
anchor_right = 1.0
anchor_bottom = 1.0
custom_fonts/font = SubResource( 3 )
text = "CookieText"

[node name="AnimationPlayer" type="AnimationPlayer" parent="Director/Cookie"]
anims/Appear = SubResource( 4 )

[node name="Bulletspace" type="Node2D" parent="."]
script = SubResource( 7 )

[node name="Round1" type="Node" parent="Bulletspace"]
script = SubResource( 5 )

[node name="SpawnPoint1" type="Node2D" parent="Bulletspace/Round1"]
position = Vector2( 330, 260 )

[node name="SpawnPoint2" type="Node2D" parent="Bulletspace/Round1"]
position = Vector2( 330, 460 )

[node name="SpawnPoint3" type="Node2D" parent="Bulletspace/Round1"]
position = Vector2( 710, 460 )

[node name="SpawnPoint4" type="Node2D" parent="Bulletspace/Round1"]
position = Vector2( 710, 260 )

[node name="Round2" type="Node" parent="Bulletspace"]

[node name="Bullet1" type="Path2D" parent="Bulletspace/Round2"]
curve = SubResource( 8 )

[node name="Bullet2" type="Path2D" parent="Bulletspace/Round2"]
curve = SubResource( 9 )

[node name="Bullet3" type="Path2D" parent="Bulletspace/Round2"]
curve = SubResource( 10 )

[node name="Bullet4" type="Path2D" parent="Bulletspace/Round2"]
curve = SubResource( 11 )

[node name="Tacticalspace" type="Control" parent="."]
visible = false
margin_left = 670.0
margin_top = 430.0
margin_right = 1010.0
margin_bottom = 590.0
script = SubResource( 6 )

[node name="Panel" type="Panel" parent="Tacticalspace"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="Button" type="Button" parent="Tacticalspace/Panel"]
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
margin_left = 20.0
margin_top = -30.0
margin_right = -10.0
margin_bottom = 20.0
text = "READY!"
[connection signal="pressed" from="Tacticalspace/Panel/Button" to="Tacticalspace" method="_on_Button_pressed"]
