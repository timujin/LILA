[gd_scene load_steps=3 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

class_name RoomSwitcher

signal room_loaded

func r(id:String):
	return $RoomList.r(id)
	

#####################
## ROOM PARAMETERS ##
#####################
# Room ID (from RoomList) -> PARAMETER -> VALUE
# Ideally this is a part of what gets saved to the savefile
var roomsParameters:Dictionary = {}

func initialize_room_values(id:String)->void:
	# Loads default room values into the Switcher
	# But _does_not_ overwrite values already loaded
	# This function should be completely idempotent
	if not roomsParameters.has(id):
		roomsParameters[id] = load_room_params(id)
	else:
		pass
		
func load_room_params(id:String)->Dictionary:
	# Path must be to the room's .gd file, NOT to the scene
	var room = r(id)
	if room == null:
		printerr(\"No room script found: \" + id)
		return {}
	return room.new().get_default_parameters()
	
func set_room_value(id:String, key:String, value):
	initialize_room_values(id)
	roomsParameters[id][key] = value

func get_room_value(id:String, key:String, default):
	initialize_room_values(id)
	if roomsParameters.has(id) and roomsParameters[id].has(key):
		return roomsParameters[id][key]
	else:
		return default

#####################
## ROOM LOADING #####
#####################


var room:Node2D = null

func on_room_loaded():
	# Accepts signal from the Room node
	DeveloperConsole.echo(\"Loaded room: \" + str(room))
	emit_signal(\"room_loaded\")
	
func switch_room_obj(to_room):
	$\"/root/Room\".pickle()
	$\"/root/Room\".name = \"Todelete_room\"
	$\"/root/Todelete_room\".queue_free()
	ModeController.reset()
	room = to_room.instance()
	get_tree().get_root().add_child(room)

func switch_to(id:String):
	var roomscene = load(r(id))
	if roomscene == null:
		DeveloperConsole.echo(\"!!! Room not found!: \" + id)
	else:
		switch_room_obj(roomscene)
"

[sub_resource type="GDScript" id=2]
script/source = "extends Node

\"\"\"
This node contains a dictionary of all rooms included into the game.
This is to make room loading an manipulation easier, not having to
load full paths to rooms every time we want to use one.
\"\"\"
func r(key:String):
	if rooms.has(key):
		return rooms[key]
	else:
		return null

var rooms = {
	# Tutorial phase
	\"00000BirthCorridor\": \"res://Content/Rooms/00000Bardo/00000BirthCorridor/BirthCorridor.tscn\",
	\"00000HappyBirthday\": \"res://Content/Rooms/00000Bardo/00001HappyBirthday/HappyBirthday.tscn\"
	
	}"

[node name="RoomSwitcher" type="Node"]
script = SubResource( 1 )

[node name="RoomList" type="Node" parent="."]
script = SubResource( 2 )
