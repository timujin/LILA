[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

#####################
## ROOM PARAMETERS ##
#####################
# PATH TO ROOM -> PARAMETER -> VALUE
# Ideally this is a part of what gets saved to the savefile
var roomsParameters:Dictionary = {}

func initialize_room_values(path:String)->void:
	# Loads default room values into the Switcher
	# But _does_not_ overwrite values already loaded
	# This function should be completely idempotent
	if not roomsParameters.has(path):
		roomsParameters[path] = load_room_params(path)
	else:
		pass
		
func load_room_params(path:String)->Dictionary:
	#print(path)
	#print (load(path).get_state())
	
	return load(path).new().get_default_parameters()
	
func set_room_value(path:String, key:String, value):
	initialize_room_values(path)
	roomsParameters[path][key] = value

func get_room_value(path:String, key:String, default):
	initialize_room_values(path)
	if roomsParameters.has(path) and roomsParameters[path].has(key):
		return roomsParameters[path][key]
	else:
		return default

#####################
## ROOM LOADING #####
#####################

onready var player = preload(\"res://BasicEntities/Player/TheSpirit.tscn\")
onready var devconsole = $\"/root/DeveloperConsole\"
onready var global = $\"/root/Global\"
onready var hud = $\"/root/HUD\"
onready var mode = $\"/root/ModeController\"

var destination_spawnpoint:String = \"\"
var room:Node2D = null

func on_room_loaded():
	devconsole.echo(\"Loaded room: \" + str(room))
	if room.get_contains_player():
		var destination
		if destination_spawnpoint == \"\":
			destination = get_node(\"/root/Room/Geometry/\"+\"DefaultSpiritSpawn\")
		else:
			destination = get_node(\"/root/Room/Geometry/\"+destination_spawnpoint)
		if destination == null:
			printerr(\"Spawn point not found: \" + destination_spawnpoint)
		else:
			spawn_player(destination)
	if room.get_hud_enabled() and global.get_value(\"ui_unlocked\", true):
		hud.enable()
	else:
		hud.disable()
	
func switch_room(to_room, destination=\"\"):
	$\"/root/Room\".pickle()
	destination_spawnpoint = destination
	$\"/root/Room\".name = \"Todelete_room\"
	$\"/root/Todelete_room\".queue_free()
	mode.reset()
	room = to_room.instance()
	get_tree().get_root().add_child(room)
	
func switch_room_by_name(to_room:String, destination=\"\"):
	var r = load(to_room)
	if r == null:
		devconsole.echoerr(\"Room not found! %s\" % to_room)
	else:
		switch_room(r, destination)
	
#func load_room(path:String):
#	var fullpath = \"res://Locations/\" + path + \".tscn\"
#	return load(fullpath)
	
func switch_room_by_path(path:String, destination=\"\"):
	var room = load(path)
	if room == null:
		$\"/root/DeveloperConsole\".echo(\"!!! Room not found!: \" + path)
	else:
		switch_room(room, destination)
	
	
func spawn_player(at:Node2D):
	var p = player.instance()
	room.add_child(p)
	p.position = at.position
	"

[node name="RoomSwitcher" type="Node2D"]
script = SubResource( 1 )
