[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

#####################
## ROOM PARAMETERS ##
#####################
# PATH TO ROOM -> PARAMETER -> VALUE
# Ideally this is a part of what gets saved to the savefile
var roomsParameters:Dictionary = {}

func initialize_room_values(path:String)->void:
	if not roomsParameters.has(path):
		roomsParameters[path] = load_room_params(path)
	else:
		pass
	
func set_room_value(path:String, key:String, value):
	initialize_room_values(path)
	roomsParameters[path][key] = value

func get_room_value(path:String, key:String, default):
	initialize_room_values(path)
	if roomsParameters.has(path) and roomsParameters[path].has(key):
		return roomsParameters[path][key]
	else:
		return default
		
func load_room_params(path:String)->Dictionary:
	var state:SceneState = load(path).get_state()
	var root_node = null
	var root_prop = null
	for i in range(state.get_node_count()):
		print(state.get_node_name(i))
		if state.get_node_name(i) == \"Room\":
			root_node = i
			break
	if root_node == null:
		printerr(\"Not a valid room: \" + path)
		return {\"ERROR\":path}
	for i in range(state.get_node_property_count(root_node)):
		print(state.get_node_property_name(root_node, i))
		if state.get_node_property_name(root_node, i) == \"script\":
			root_prop = i
			break
	if root_prop == null:
		printerr(\"Room doesn't have a script attached: \" + path)
		return {\"ERROR\":path}
	return state.get_node_property_value(root_node, root_prop).new().get_default_parameters()

#####################
## ROOM LOADING #####
#####################

onready var player = preload(\"res://Objects/TheSpirit/TheSpirit.tscn\")

var room:Node2D = null

func on_room_loaded():
	print(room)
	if room.get_contains_player():
		spawn_player(get_node(\"/root/Room/Geometry/\"+room.get_player_spawn_point()))
	
func switch_room(to_room:PackedScene):
	$\"/root/Room\".name = \"Todelete_room\"
	$\"/root/Todelete_room\".queue_free()
	room = to_room.instance()
	get_tree().get_root().add_child(room)
	
	
func spawn_player(at:Node2D):
	if at == null:
		printerr(\"Spawn point not found: \"+room.get_player_spawn_point())
		return
	var p = player.instance()
	room.add_child(p)
	p.position = at.position
	"

[node name="RoomSwitcher" type="Node2D"]
script = SubResource( 1 )
