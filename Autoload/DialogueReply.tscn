[gd_scene load_steps=3 format=2]

[ext_resource path="res://Assets/Sprites/Faces/spirit.png" type="Texture" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Popup

#onready var speaker = $Panel/HBoxContainer/TextureRect
#onready var textbox = $Panel/HBoxContainer/MarginContainer/RichTextLabel
#var color:Color     = Color.white setget set_color
#var text:String     = \"{NO TEXT}\" setget set_text

signal choice_made


onready var button1 = $Panel/HBoxContainer/VBoxContainer/Button
onready var button2 = $Panel/HBoxContainer/VBoxContainer/Button2
onready var button3 = $Panel/HBoxContainer/VBoxContainer/Button3

var reply_values = [\"ERROR\",\"ERROR\",\"ERROR\"]

func show_replies(branches, position: Vector2):
	if branches.keys().size() > 3:
		printerr(\"More than 3 replies not supported ATM\")
		return
	var btns = [button1, button2, button3]
	for btn in btns:
		btn.visible = false
	for i in range(branches.keys().size()):
		btns[i].visible = true
		btns[i].text = branches.keys()[i]
		#print(branches[branches.keys()[i]])
		reply_values[i] = branches.keys()[i]
	rect_position = position
	call_deferred(\"popup\")


#func show_dialogue(text:String, speaker:Texture, position: Vector2, color:Color = Color.white):
#	set_text(text)
#	set_speaker(speaker)
#	set_color(color)
#	rect_position = position
#	#yield(get_tree(), \"idle_frame\")
#	call_deferred(\"safe_popup\")
	
#var unskippable: = false
#func safe_popup():
#	unskippable = true
#	popup()
#	yield(get_tree().create_timer(0.2), \"timeout\")
#	unskippable = false
	
func is_up() -> bool:
	return visible

#func set_color(val:Color):
#	color = val
#	textbox.bbcode_text = (\"[color=#%s]%s[/color]\" % [color.to_html (false), text])
	
#func set_text(val:String):
#	text = val
#	textbox.bbcode_text = (\"[color=#%s]%s[/color]\" % [color.to_html(false), text])
	
#func set_speaker(val:Texture):
#	if val == null:
#		speaker.visible = false
#	else:
#		speaker.visible = true
#		speaker.texture = val
		
		
#func _input(event):
#	if unskippable:
#		return
#	if visible && Input.is_action_pressed(\"ui_proceed\"):
#		hide()
#		get_tree().set_input_as_handled()
			

func _on_Button_pressed(index:int):
	emit_signal(\"choice_made\", reply_values[index-1])
	hide()
"

[node name="Popup" type="Popup"]
margin_right = 490.0
margin_bottom = 120.0
script = SubResource( 1 )

[node name="Panel" type="Panel" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="HBoxContainer" type="HBoxContainer" parent="Panel"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="TextureRect" type="TextureRect" parent="Panel/HBoxContainer"]
margin_right = 102.0
margin_bottom = 120.0
size_flags_horizontal = 3
texture = ExtResource( 1 )
stretch_mode = 4

[node name="VBoxContainer" type="VBoxContainer" parent="Panel/HBoxContainer"]
margin_left = 106.0
margin_right = 490.0
margin_bottom = 120.0
size_flags_horizontal = 3
size_flags_stretch_ratio = 3.75

[node name="Button" type="Button" parent="Panel/HBoxContainer/VBoxContainer"]
margin_right = 384.0
margin_bottom = 37.0
size_flags_vertical = 3
text = "Choice 1"

[node name="Button2" type="Button" parent="Panel/HBoxContainer/VBoxContainer"]
margin_top = 41.0
margin_right = 384.0
margin_bottom = 78.0
size_flags_vertical = 3
text = "Choice 2"

[node name="Button3" type="Button" parent="Panel/HBoxContainer/VBoxContainer"]
margin_top = 82.0
margin_right = 384.0
margin_bottom = 120.0
size_flags_vertical = 3
text = "Choice 3"
[connection signal="pressed" from="Panel/HBoxContainer/VBoxContainer/Button" to="." method="_on_Button_pressed" binds= [ 1 ]]
[connection signal="pressed" from="Panel/HBoxContainer/VBoxContainer/Button2" to="." method="_on_Button_pressed" binds= [ 2 ]]
[connection signal="pressed" from="Panel/HBoxContainer/VBoxContainer/Button3" to="." method="_on_Button_pressed" binds= [ 3 ]]
