[gd_scene load_steps=5 format=2]

[ext_resource path="res://Assets/Placeholders/icon.png" type="Texture" id=1]
[ext_resource path="res://BasicEntities/Interactable/BaseActivator.gd" type="Script" id=2]
[ext_resource path="res://BasicEntities/Interactable/BasePickler.gd" type="Script" id=3]

[sub_resource type="GDScript" id=3]
script/source = "extends Control

onready var interaction_point = get_parent().get_node(\"InteractionPoint\")
onready var activator = get_parent().get_node(\"Activator\")
onready var floatie = get_node(\"/root/Floatie\")
onready var mode_controller = get_node(\"/root/ModeController\")

export var ActivatorName : String = \"Unnamed\"
export(String, \"From interaction point\", \"Remote\", \"Background\") var activation_type = \"From interaction point\"

#func _input_event(viewport, event, shape_idx):
#	if mode_controller.is_cutscene:
#		return
#	if not event is InputEventMouseButton:
#		return
#	if event.button_index != BUTTON_LEFT or not event.pressed:
#		return
#		
#	#if $\"/root/ModeController\".get_is_player_holding_item():
#	#	print(\"Holding item\")
#	#	$\"/root/ModeController\".apply_item(self)
#	#else:
#	trigger_activator()

func trigger_activator():
	if activator == null:
		printerr(\"No activator set for %s\" % ActivatorName)
		return

	var player = $\"/root/Room/Player\"
	if player == null:
		# player not active
		return

	match activation_type:
		\"From interaction point\":
			if interaction_point == null:
				printerr(\"No interaction point for %s\" % ActivatorName)
				return
			player.freeze()
			player.set_activation_intent(activator)
			player.initialize_movement(interaction_point.global_position)
		\"Remote\":
			player.freeze()
			activator.activate()
		\"Background\":
			activator.activate()
		_:
			printerr (\"Incorrect activation type for %s: %s\" % [ActivatorName, activation_type])


func _on_ClickArea_gui_input(event):
	if mode_controller.is_cutscene:
		return
	if not event is InputEventMouseButton:
		return
	if event.button_index != BUTTON_LEFT or not event.pressed:
		return
		
	print(\"Triggered\")
		
	if $\"/root/ModeController\".get_is_player_holding_item():
		print(\"Holding item\")
		$\"/root/ModeController\".apply_item($\"../Activator\")
	else:
		trigger_activator()
"

[node name="BaseObject" type="Node2D"]

[node name="Sprite" type="Sprite" parent="."]
position = Vector2( -0.88578, -15.4263 )
scale = Vector2( 0.458824, 0.473206 )
texture = ExtResource( 1 )

[node name="BlurbPoint" type="Position2D" parent="."]

[node name="InteractionPoint" type="Position2D" parent="."]
position = Vector2( 0, 20 )

[node name="ClickArea" type="Control" parent="."]
margin_left = -15.0
margin_top = -30.0
margin_right = 14.0
mouse_default_cursor_shape = 2
script = SubResource( 3 )

[node name="Activator" type="Node" parent="."]
script = ExtResource( 2 )

[node name="Pickler" type="Node" parent="." groups=[
"picklers",
]]
script = ExtResource( 3 )
[connection signal="gui_input" from="ClickArea" to="ClickArea" method="_on_ClickArea_gui_input"]
