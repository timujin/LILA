[gd_scene load_steps=6 format=2]

[ext_resource path="res://Assets/Themes/HUD.tres" type="Theme" id=1]
[ext_resource path="res://Systems/WorldspaceMenus/HUDButtons/Inventory/Item.tscn" type="PackedScene" id=2]
[ext_resource path="res://Assets/Sprites/Icons/close+icon-1320184117228553763_256.png" type="Texture" id=3]
[ext_resource path="res://Systems/WorldspaceMenus/HUDButtons/Inventory/Category.tscn" type="PackedScene" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends CanvasLayer

signal opened
signal closed

onready var item_prefab = preload(\"res://Systems/WorldspaceMenus/HUDButtons/Inventory/Item.tscn\")
onready var category_prefab = preload(\"res://Systems/WorldspaceMenus/HUDButtons/Inventory/Category.tscn\")

onready var item_container = $\"Modal/Window/ItemsPanel/ScrollContainer/ItemsContainer\"
onready var category_container = $\"Modal/Window/CategoriesPanel/ScrollContainer/CategoriesContainer\"

func open():
	set_visible(true)
	emit_signal(\"opened\")
	
func close():
	set_visible(false)
	emit_signal(\"closed\")

func reload_ui():
	# Loading items
	
	var items = Character.inventory.get_all_items()
	items.sort_custom(self,\"sort_items_alphabetically\")
	for child in item_container.get_children():
		child.queue_free()
	for item in items:
		var renderer = item_prefab.instance()
		item_container.add_child(renderer)
		renderer.render_item(item)
		renderer.connect(\"pressed\", self, \"on_item_press\", [renderer])
		
	# Loading categories
	
	for child in category_container.get_children():
		child.queue_free()
		
	var categories = []
	for item in items:
		if not categories.has(item.category):
			categories.append(item.category)
			
	categories.sort()
	categories.push_front(\"All\")
	
	for category in categories:
		var renderer = category_prefab.instance()
		category_container.add_child(renderer)
		renderer.text = category
		renderer.connect(\"pressed\", self, \"show_category\", [category])
		
func press_category(category:String):
	for cat in category_container.get_children():
		cat.pressed = category == cat.text
	
static func sort_items_alphabetically(a,b):
	return a.display_name < b.display_name
	
func show_category(category:String):
	press_category(category)
	for item in item_container.get_children():
		if (category == \"All\") or (category == item.category):
			item.visible = true
		else:
			item.visible = false

func _ready():
	reload_ui()

var visible = false setget set_visible, get_visible

func set_visible(value:bool):
	$\"Modal\".visible = value
	
func get_visible():
	return $\"Modal\".visible
	
func on_item_press(item):
	item.item_object.get_node(\"OnActivate\").activate()

func _on_CloseButton_pressed():
	ModeController.set_mode(ModeController.EXPLORE)
	close()
"

[node name="Inventory" type="CanvasLayer"]
layer = 3
script = SubResource( 1 )

[node name="Modal" type="Panel" parent="."]
self_modulate = Color( 1, 1, 1, 0.258824 )
anchor_right = 1.0
anchor_bottom = 1.0
theme = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Window" type="Panel" parent="Modal"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 100.0
margin_top = 68.0
margin_right = -70.0
margin_bottom = -83.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CloseButton" type="Button" parent="Modal/Window"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -30.3774
margin_top = -33.962
margin_right = 39.6226
margin_bottom = 33.038
icon = ExtResource( 3 )
flat = true
expand_icon = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CategoriesPanel" type="Panel" parent="Modal/Window"]
anchor_top = 0.5
anchor_bottom = 0.5
margin_left = 26.0
margin_top = -349.5
margin_right = 383.0
margin_bottom = 352.5
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ScrollContainer" type="ScrollContainer" parent="Modal/Window/CategoriesPanel"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 20.0
margin_top = 6.0
margin_right = -14.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CategoriesContainer" type="VBoxContainer" parent="Modal/Window/CategoriesPanel/ScrollContainer"]
margin_right = 323.0
margin_bottom = 60.0
size_flags_horizontal = 3

[node name="Category" parent="Modal/Window/CategoriesPanel/ScrollContainer/CategoriesContainer" instance=ExtResource( 4 )]
anchor_right = 0.0
margin_right = 323.0
margin_bottom = 28.0

[node name="Category2" parent="Modal/Window/CategoriesPanel/ScrollContainer/CategoriesContainer" instance=ExtResource( 4 )]
anchor_right = 0.0
margin_top = 32.0
margin_right = 323.0
margin_bottom = 60.0
text = "Category namedsasad"
clip_text = true

[node name="ItemsPanel" type="Panel" parent="Modal/Window"]
anchor_left = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -1035.14
margin_top = 25.704
margin_right = -24.136
margin_bottom = -21.296
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ScrollContainer" type="ScrollContainer" parent="Modal/Window/ItemsPanel"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 15.0
margin_top = 14.0
margin_right = -17.004
margin_bottom = -17.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ItemsContainer" type="GridContainer" parent="Modal/Window/ItemsPanel/ScrollContainer"]
margin_right = 412.0
margin_bottom = 100.0
columns = 15
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Item" parent="Modal/Window/ItemsPanel/ScrollContainer/ItemsContainer" instance=ExtResource( 2 )]

[node name="Item2" parent="Modal/Window/ItemsPanel/ScrollContainer/ItemsContainer" instance=ExtResource( 2 )]
margin_left = 104.0
margin_right = 204.0

[node name="Item3" parent="Modal/Window/ItemsPanel/ScrollContainer/ItemsContainer" instance=ExtResource( 2 )]
margin_left = 208.0
margin_right = 308.0

[node name="Item4" parent="Modal/Window/ItemsPanel/ScrollContainer/ItemsContainer" instance=ExtResource( 2 )]
margin_left = 312.0
margin_right = 412.0
[connection signal="pressed" from="Modal/Window/CloseButton" to="." method="_on_CloseButton_pressed"]
