[gd_scene load_steps=6 format=2]

[ext_resource path="res://Assets/Fonts/times-new-roman.ttf" type="DynamicFontData" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Control

signal finished

#onready var face = $\"HeadPanel\"
onready var textbox = $\"RichTextLabel\"

func set_icon(icon:Texture):
	return
	\"\"\"
	if icon == null:
		face.visible = false
	else:
		face.visible = true
		face.get_child(0).texture = icon
	\"\"\"

func set_text(text:String):
	print(textbox.set_text(text))


func _on_RichTextLabel_finished():
	emit_signal(\"finished\")
"

[sub_resource type="DynamicFont" id=2]
size = 14
outline_color = Color( 1, 1, 1, 0 )
font_data = ExtResource( 2 )

[sub_resource type="Theme" id=3]
default_font = SubResource( 2 )

[sub_resource type="GDScript" id=4]
script/source = "extends RichTextLabel

signal finished

func set_text(text):
	self.bbcode_text = \"[color=black]%s[/color]\"%text
	yield(get_tree(), \"idle_frame\")
	yield(get_tree(), \"idle_frame\")
	yield(get_tree(), \"idle_frame\")
	#print(text)
	#print(self.rect_size)
	#print(self.get_content_height())
	if self.rect_size.y < self.get_content_height():
		self.rect_size = Vector2(self.rect_size.x, self.get_content_height())
		#print(text)
		print(self.get_content_height())
		#print(self.rect_size)
		yield(get_tree(), \"idle_frame\")
		get_parent().rect_min_size = self.rect_size + Vector2(0, 10)
		#print(get_parent().rect_min_size)
		#get_parent().get_parent().hide()
		#get_parent().get_parent().show()
	emit_signal(\"finished\")
"

[node name="HeadSayItem" type="Control"]
self_modulate = Color( 1, 1, 1, 0 )
anchor_right = 1.0
margin_bottom = 46.0
rect_min_size = Vector2( 0, 15 )
size_flags_horizontal = 3
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="RichTextLabel" type="RichTextLabel" parent="."]
anchor_right = 1.0
theme = SubResource( 3 )
bbcode_enabled = true
scroll_active = false
override_selected_font_color = true
script = SubResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}
[connection signal="finished" from="RichTextLabel" to="." method="_on_RichTextLabel_finished"]
