[gd_scene load_steps=4 format=2]

[ext_resource path="res://Systems/Rooms/BaseRoom.gd" type="Script" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Camera2D

export var is_scrolling = false

const min_speed = 0
const max_speed = 1000
const horiz_margin = 0.2
const verti_margin = 0.2

func _process(delta):
	return
	if ModeController.is_room_scrollable() and is_scrolling:
		screen_scrolling(delta)
	
	
func screen_scrolling(delta):
	var vp = get_viewport()
	var mp = vp.get_mouse_position()
	
	var geom = $\"/root/Room/Geometry\"
	limit_left = geom.get_node(\"CameraLimitLeft\").position.x
	limit_right = geom.get_node(\"CameraLimitRight\").position.x
	limit_top = geom.get_node(\"CameraLimitTop\").position.y
	limit_bottom = geom.get_node(\"CameraLimitBottom\").position.y
	
	# horiz
	
	var h_left_edge = 0
	var h_left_marg = vp.size.x * horiz_margin
	var h_right_edge = vp.size.x
	var h_right_marg = vp.size.x * (1 - horiz_margin)
	
	var horiz_speed = 0
	if mp.x < h_left_marg:
		var power = (h_left_marg - mp.x) /  (vp.size.x * horiz_margin)
		horiz_speed = - lerp(min_speed, max_speed, power)
		
	if mp.x > h_right_marg:
		var power = (mp.x - h_right_marg) /  (vp.size.x * (horiz_margin))
		horiz_speed = lerp(min_speed, max_speed, power)
		
	position.x += horiz_speed*delta
	
	# vert
	
	var h_top_edge = 0
	var h_top_marg = vp.size.y * verti_margin
	var h_bottom_edge = vp.size.y
	var h_bottom_marg = vp.size.y * (1 - verti_margin)
	
	var verti_speed = 0
	if mp.y < h_top_marg:
		var power = (h_top_marg - mp.y) /  (vp.size.y * verti_margin)
		verti_speed = - lerp(min_speed, max_speed, power)
		
	if mp.y > h_bottom_marg:
		var power = (mp.y - h_bottom_marg) /  (vp.size.y * (verti_margin))
		verti_speed = lerp(min_speed, max_speed, power)
		
	position.y += verti_speed*delta
	
	position.x = max(position.x, limit_left + vp.size.x/2)
	position.x = min(position.x, limit_right - vp.size.x/2)
	position.y = max(position.y, limit_top + vp.size.y /2)
	position.y = min(position.y, limit_bottom - vp.size.y /2)
"

[sub_resource type="Animation" id=2]
resource_name = "New Anim"
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath("Panel:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "method"
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.4 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Panel:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}

[node name="Room" type="Node2D"]
script = ExtResource( 1 )
__meta__ = {
"_edit_lock_": true
}

[node name="Description" type="Node" parent="."]

[node name="Background" type="Node2D" parent="."]
__meta__ = {
"_edit_lock_": true
}

[node name="Geometry" type="Node2D" parent="."]
__meta__ = {
"_edit_lock_": true
}

[node name="CameraLimitLeft" type="Position2D" parent="Geometry"]
position = Vector2( -1525.72, 542.16 )

[node name="CameraLimitTop" type="Position2D" parent="Geometry"]
position = Vector2( 881.761, -1129.7 )

[node name="CameraLimitBottom" type="Position2D" parent="Geometry"]
position = Vector2( 939.081, 1908.31 )

[node name="CameraLimitRight" type="Position2D" parent="Geometry"]
position = Vector2( 4084.8, 679.577 )

[node name="FirstPersonCamera" type="Camera2D" parent="."]
current = true
limit_smoothed = true
smoothing_enabled = true
editor_draw_limits = true
script = SubResource( 1 )

[node name="AnimatedShade" type="CanvasLayer" parent="."]

[node name="Panel" type="Panel" parent="AnimatedShade"]
visible = false
margin_left = -2182.0
margin_top = -938.0
margin_right = 3085.0
margin_bottom = 1920.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Fadeout" type="AnimationPlayer" parent="AnimatedShade"]
autoplay = "New Anim"
"anims/New Anim" = SubResource( 2 )
