[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

func r(id:String):
	return GlobalRegister.room(id)
	
####
# Room preloading
# This is to make the room loading work normally
# if you set it as the starting scene of the project
####

var room_preloaded = true

func _ready():
	return
	print(\"Room switcher ready\")
	if room_preloaded:
		var room_id = $\"/root/Room\".roomID
		switch_to(room_id)
	
#####################
## ROOM LOADING #####
#####################
\"\"\"
func _ready():
	init_notifier()
	if $\"/root/Room\" == null: return # debug mode
	$\"/root/Room\".connect(\"room_loaded\", self, \"on_room_loaded\")
	
class LoadedNotifier:
	signal room_fully_loaded
	func poke():
		emit_signal(\"room_fully_loaded\")
	
var notifier setget , get_notifier

func init_notifier():
	if notifier == null: notifier = LoadedNotifier.new()

func get_notifier():
	init_notifier()
	if room_deserialized:
		notifier.call_deferred(\"poke\")
	return notifier
		
		
func on_room_loaded():
	room_deserialized = true
	init_notifier()
	notifier.poke()


func set_room_deserialized(value):
	room_deserialized = value
	if value:
		emit_signal(\"deserialize_complete\")

\"\"\"

var room:Node = null

var in_the_process_of_loading = false

signal room_loaded
	
func _switch_room_obj(to_room):
	while $\"/root/Room\" == null:
		yield(get_tree(), \"idle_frame\")
		yield(get_tree(), \"idle_frame\")
	$\"/root/Room\".serialize()
	$\"/root/Room\".name = \"Todelete_room\"
	$\"/root/Todelete_room\".queue_free()
	while $\"/root/Todelete_room\" != null:
		yield(get_tree(), \"idle_frame\")
		yield(get_tree(), \"idle_frame\")
	room = to_room.instance()
	get_tree().get_root().add_child(room)
	room.connect(\"room_loaded\", self, \"on_room_loaded\")
	room.connect(\"room_loaded\", $LoadingScreen, \"set_visible\", [false])
	
	#var serializables = get_tree().get_nodes_in_group(\"serializable_room\")
	
\"\"\"	
func deserialize_room():
	var objects = get_tree().get_nodes_in_group(\"serializable_room\")
	for object in objects:
		var data = Character.objects.deserialize($\"/root/Room\".roomID, object.get_path(), {})
		if data.size() > 0:
			safe_deserialize_object(object, data)
	RoomSwitcher.room_deserialized = true
	call_deferred(\"emit_signal\", \"room_loaded\")
\"\"\"

func switch_to(id:String):
	in_the_process_of_loading = true
	ModeController.clicks_blocked = true
	$LoadingScreen.visible = true
	yield(get_tree(), \"idle_frame\")
	yield(get_tree(), \"idle_frame\")
	var roomscene = r(id)
	if roomscene == null:
		$LoadingScreen.visible = false
		printerr(\"!!! Room not found!: \" + id)
		assert(false)
	else:
		_switch_room_obj(roomscene)

func on_room_loaded():
	ModeController.clicks_blocked = false
	$LoadingScreen.visible = false
	in_the_process_of_loading = false
	emit_signal(\"room_loaded\")
"

[node name="RoomSwitcher" type="Node"]
script = SubResource( 1 )
