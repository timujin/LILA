[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

signal new_room_loaded

var room_deserialized = false setget set_room_deserialized

func r(id:String):
	return GlobalRegister.room(id)
	
#####################
## ROOM LOADING #####
#####################

func _ready():
	init_notifier()
	if $\"/root/Room\" == null: return # debug mode
	$\"/root/Room\".connect(\"room_loaded\", self, \"on_room_loaded\")
	
class LoadedNotifier:
	signal room_fully_loaded
	func poke():
		emit_signal(\"room_fully_loaded\")
	
var notifier setget , get_notifier

func init_notifier():
	if notifier == null: notifier = LoadedNotifier.new()

func get_notifier():
	init_notifier()
	if room_deserialized:
		notifier.call_deferred(\"poke\")
	return notifier
		
		
func on_room_loaded():
	room_deserialized = true
	init_notifier()
	notifier.poke()


func set_room_deserialized(value):
	room_deserialized = value
	if value:
		emit_signal(\"deserialize_complete\")

var room:Node = null
	
func _switch_room_obj(to_room):
	room_deserialized = false
	ModeController.reset()
	#$\"/root/Room\".pickle()
	$\"/root/Room\".serialize()
	$\"/root/Room\".name = \"Todelete_room\"
	$\"/root/Todelete_room\".queue_free()
	room = to_room.instance()
	get_tree().get_root().add_child(room)
	room.connect(\"room_loaded\", self, \"on_room_loaded\")

func switch_to(id:String):
	var roomscene = r(id)
	if roomscene == null:
		printerr(\"!!! Room not found!: \" + id)
		assert(false)
		pass
	else:
		_switch_room_obj(roomscene)
"

[node name="RoomSwitcher" type="Node"]
script = SubResource( 1 )
