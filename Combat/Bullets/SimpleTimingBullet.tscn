[gd_scene load_steps=6 format=2]

[ext_resource path="res://Assets/Placeholders/freezinbreath.png" type="Texture" id=1]
[ext_resource path="res://Assets/Placeholders/circle.png" type="Texture" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

signal bullet_activated
signal bullet_finished
signal bullet_preactivated

var countdown = null
var total_duration = 0.0
var allowance = 0.25

func run(duration:float=3.0):
	countdown = Timer.new()
	countdown.connect(\"timeout\",self,\"_on_timer_timeout\") 
	add_child(countdown)
	countdown.start(duration)
	total_duration = duration
	
func _process(delta):
	if countdown != null:
		display_timer()
	if countdown and countdown.time_left <= allowance:
		$Sprite.modulate = Color.red
		
func display_timer():
	$\"HugCircle\".scale = Vector2.ONE * (countdown.time_left / total_duration)
	
func _on_timer_timeout():
	$HugCircle.queue_free()
	countdown = null
	yield(get_tree().create_timer(allowance), \"timeout\")
	emit_signal(\"bullet_finished\")
	queue_free()
	
func activate():
	if countdown.time_left < allowance:
		emit_signal(\"bullet_activated\")
	else:
		emit_signal(\"bullet_preactivated\")
	queue_free()
	
func _ready():
	run()"

[sub_resource type="GDScript" id=2]
script/source = "extends Area2D


func _input_event(viewport, event, shape_idx):
	#if mode_controller.is_cutscene:
	#	return
	if not event is InputEventMouseButton:
		return
	if event.button_index != BUTTON_LEFT or not event.pressed:
		return
		
	print(\"Event\")
	$\"..\".activate()"

[sub_resource type="CircleShape2D" id=3]
radius = 38.1697

[node name="Bullet" type="Node2D"]
position = Vector2( 227.147, 110.803 )
script = SubResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
texture = ExtResource( 1 )

[node name="HugCircle" type="Sprite" parent="."]
scale = Vector2( 1.04688, 1.04688 )
texture = ExtResource( 2 )

[node name="ClickArea" type="Area2D" parent="."]
script = SubResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="ClickArea"]
shape = SubResource( 3 )
